[
  {
    "url": "https://api.github.com/repos/paritytech/ink/releases/108632701",
    "assets_url": "https://api.github.com/repos/paritytech/ink/releases/108632701/assets",
    "upload_url": "https://uploads.github.com/repos/paritytech/ink/releases/108632701/assets{?name,label}",
    "html_url": "https://github.com/paritytech/ink/releases/tag/v4.2.1",
    "id": 108632701,
    "author": {
      "login": "HCastano",
      "id": 12344623,
      "node_id": "MDQ6VXNlcjEyMzQ0NjIz",
      "avatar_url": "https://avatars.githubusercontent.com/u/12344623?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/HCastano",
      "html_url": "https://github.com/HCastano",
      "followers_url": "https://api.github.com/users/HCastano/followers",
      "following_url": "https://api.github.com/users/HCastano/following{/other_user}",
      "gists_url": "https://api.github.com/users/HCastano/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/HCastano/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/HCastano/subscriptions",
      "organizations_url": "https://api.github.com/users/HCastano/orgs",
      "repos_url": "https://api.github.com/users/HCastano/repos",
      "events_url": "https://api.github.com/users/HCastano/events{/privacy}",
      "received_events_url": "https://api.github.com/users/HCastano/received_events",
      "type": "User",
      "site_admin": false
    },
    "node_id": "RE_kwDOCZwVgs4GeZp9",
    "tag_name": "v4.2.1",
    "target_commitish": "master",
    "name": "v4.2.1",
    "draft": false,
    "prerelease": false,
    "created_at": "2023-06-14T19:46:22Z",
    "published_at": "2023-06-14T19:50:27Z",
    "assets": [

    ],
    "tarball_url": "https://api.github.com/repos/paritytech/ink/tarball/v4.2.1",
    "zipball_url": "https://api.github.com/repos/paritytech/ink/zipball/v4.2.1",
    "body": "# Version 4.2.1\r\n\r\nThis release contains a low-severity security related fix. Users of the `4.x` series of releases are advised to update.\r\n\r\nNote that this release contains a breaking change since the API of `ink_env::invoke_contract_delegate` and `CallBuilder::try_invoke` now return an extra `ink_primitives::MessageResult` which must be handled.\r\n\r\nWe decided to release this breaking change as a `PATCH` release to ensure that affected users are upgrading to the fixed API.\r\n\r\nSee the [published advisory](https://github.com/paritytech/ink/security/advisories/GHSA-853p-5678-hv8f) for more info.\r\n\r\n## Fixed\r\n- Handle `LangError` from `DelegateCall`",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/ink/releases/108632701/reactions",
      "total_count": 7,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 5,
      "rocket": 0,
      "eyes": 2
    }
  },
  {
    "url": "https://api.github.com/repos/paritytech/ink/releases/100162958",
    "assets_url": "https://api.github.com/repos/paritytech/ink/releases/100162958/assets",
    "upload_url": "https://uploads.github.com/repos/paritytech/ink/releases/100162958/assets{?name,label}",
    "html_url": "https://github.com/paritytech/ink/releases/tag/v4.2.0",
    "id": 100162958,
    "author": {
      "login": "cmichi",
      "id": 241530,
      "node_id": "MDQ6VXNlcjI0MTUzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/241530?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cmichi",
      "html_url": "https://github.com/cmichi",
      "followers_url": "https://api.github.com/users/cmichi/followers",
      "following_url": "https://api.github.com/users/cmichi/following{/other_user}",
      "gists_url": "https://api.github.com/users/cmichi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cmichi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cmichi/subscriptions",
      "organizations_url": "https://api.github.com/users/cmichi/orgs",
      "repos_url": "https://api.github.com/users/cmichi/repos",
      "events_url": "https://api.github.com/users/cmichi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cmichi/received_events",
      "type": "User",
      "site_admin": false
    },
    "node_id": "RE_kwDOCZwVgs4F-F2O",
    "tag_name": "v4.2.0",
    "target_commitish": "master",
    "name": "v4.2.0",
    "draft": false,
    "prerelease": false,
    "created_at": "2023-04-20T08:23:08Z",
    "published_at": "2023-04-20T08:23:52Z",
    "assets": [

    ],
    "tarball_url": "https://api.github.com/repos/paritytech/ink/tarball/v4.2.0",
    "zipball_url": "https://api.github.com/repos/paritytech/ink/zipball/v4.2.0",
    "body": "![ink!-4 2 0](https://user-images.githubusercontent.com/241530/233277391-0dabb6c6-62f4-48c8-96cf-1e0fa9d37ca9.png)\r\n\r\n### Added\r\n- Persist `Environment` in metadata ‒ [#1741](https://github.com/paritytech/ink/pull/1741)\r\n- Added possibility for `runtime_call` in E2E tests ‒ [#1736](https://github.com/paritytech/ink/pull/1736)\r\n- Added `default` attribute to constructors and messages ‒ [#1724](https://github.com/paritytech/ink/pull/1724)\r\n- Added clarification about `Mapping::size` unit ‒ [#1735](https://github.com/paritytech/ink/pull/1735)\r\n\r\n### Changed\r\n- Upgraded `syn` to version `2` ‒ [#1731](https://github.com/paritytech/ink/pull/1731)\r\n- Update `scale-info` requirement to `2.5` ‒ [#1733](https://github.com/paritytech/ink/pull/1733)\r\n- Bump `subxt` to `0.28.0` ‒ [#1750](https://github.com/paritytech/ink/pull/1750)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/ink/releases/100162958/reactions",
      "total_count": 11,
      "+1": 5,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 5,
      "eyes": 0
    }
  },
  {
    "url": "https://api.github.com/repos/paritytech/ink/releases/96684599",
    "assets_url": "https://api.github.com/repos/paritytech/ink/releases/96684599/assets",
    "upload_url": "https://uploads.github.com/repos/paritytech/ink/releases/96684599/assets{?name,label}",
    "html_url": "https://github.com/paritytech/ink/releases/tag/v4.1.0",
    "id": 96684599,
    "author": {
      "login": "SkymanOne",
      "id": 17993104,
      "node_id": "MDQ6VXNlcjE3OTkzMTA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/17993104?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SkymanOne",
      "html_url": "https://github.com/SkymanOne",
      "followers_url": "https://api.github.com/users/SkymanOne/followers",
      "following_url": "https://api.github.com/users/SkymanOne/following{/other_user}",
      "gists_url": "https://api.github.com/users/SkymanOne/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SkymanOne/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SkymanOne/subscriptions",
      "organizations_url": "https://api.github.com/users/SkymanOne/orgs",
      "repos_url": "https://api.github.com/users/SkymanOne/repos",
      "events_url": "https://api.github.com/users/SkymanOne/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SkymanOne/received_events",
      "type": "User",
      "site_admin": false
    },
    "node_id": "RE_kwDOCZwVgs4Fw0o3",
    "tag_name": "v4.1.0",
    "target_commitish": "master",
    "name": "v4.1.0",
    "draft": false,
    "prerelease": false,
    "created_at": "2023-03-23T17:57:06Z",
    "published_at": "2023-03-23T17:59:01Z",
    "assets": [

    ],
    "tarball_url": "https://api.github.com/repos/paritytech/ink/tarball/v4.1.0",
    "zipball_url": "https://api.github.com/repos/paritytech/ink/zipball/v4.1.0",
    "body": "## Added\r\n- Basic support for `dyn Trait` to allow cross-contract calls only with trait - [#1673](https://github.com/paritytech/ink/pull/1673)\r\n- E2E: auto detect contracts to be built - [#1691](https://github.com/paritytech/ink/pull/1691)\r\n- Add `set_code_hash` to `EnvAccess` - [#1698](https://github.com/paritytech/ink/pull/1698)\r\n- Add `set_block_timestamp` to off-chain test api `Engine` - [#1721](https://github.com/paritytech/ink/pull/1721)\r\n\r\n## Changed\r\n- Support conditional compilation - [#1707](https://github.com/paritytech/ink/pull/1707)",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/ink/releases/96684599/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    }
  },
  {
    "url": "https://api.github.com/repos/paritytech/ink/releases/93818395",
    "assets_url": "https://api.github.com/repos/paritytech/ink/releases/93818395/assets",
    "upload_url": "https://uploads.github.com/repos/paritytech/ink/releases/93818395/assets{?name,label}",
    "html_url": "https://github.com/paritytech/ink/releases/tag/v4.0.1",
    "id": 93818395,
    "author": {
      "login": "SkymanOne",
      "id": 17993104,
      "node_id": "MDQ6VXNlcjE3OTkzMTA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/17993104?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SkymanOne",
      "html_url": "https://github.com/SkymanOne",
      "followers_url": "https://api.github.com/users/SkymanOne/followers",
      "following_url": "https://api.github.com/users/SkymanOne/following{/other_user}",
      "gists_url": "https://api.github.com/users/SkymanOne/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SkymanOne/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SkymanOne/subscriptions",
      "organizations_url": "https://api.github.com/users/SkymanOne/orgs",
      "repos_url": "https://api.github.com/users/SkymanOne/repos",
      "events_url": "https://api.github.com/users/SkymanOne/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SkymanOne/received_events",
      "type": "User",
      "site_admin": false
    },
    "node_id": "RE_kwDOCZwVgs4Fl44b",
    "tag_name": "v4.0.1",
    "target_commitish": "master",
    "name": "v4.0.1",
    "draft": false,
    "prerelease": false,
    "created_at": "2023-02-27T16:10:10Z",
    "published_at": "2023-02-27T16:17:40Z",
    "assets": [

    ],
    "tarball_url": "https://api.github.com/repos/paritytech/ink/tarball/v4.0.1",
    "zipball_url": "https://api.github.com/repos/paritytech/ink/zipball/v4.0.1",
    "body": "## Version 4.0.1\r\n\r\n### Fixed\r\n- Fixing `ManualKey<0>` to act properly - [#1670](https://github.com/paritytech/ink/pull/1670)\r\n- Indicated latest release of `cargo-contract` in `e2e` crate\r\n"
  },
  {
    "url": "https://api.github.com/repos/paritytech/ink/releases/92580673",
    "assets_url": "https://api.github.com/repos/paritytech/ink/releases/92580673/assets",
    "upload_url": "https://uploads.github.com/repos/paritytech/ink/releases/92580673/assets{?name,label}",
    "html_url": "https://github.com/paritytech/ink/releases/tag/v4.0.0",
    "id": 92580673,
    "author": {
      "login": "ascjones",
      "id": 75586,
      "node_id": "MDQ6VXNlcjc1NTg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/75586?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ascjones",
      "html_url": "https://github.com/ascjones",
      "followers_url": "https://api.github.com/users/ascjones/followers",
      "following_url": "https://api.github.com/users/ascjones/following{/other_user}",
      "gists_url": "https://api.github.com/users/ascjones/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ascjones/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ascjones/subscriptions",
      "organizations_url": "https://api.github.com/users/ascjones/orgs",
      "repos_url": "https://api.github.com/users/ascjones/repos",
      "events_url": "https://api.github.com/users/ascjones/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ascjones/received_events",
      "type": "User",
      "site_admin": false
    },
    "node_id": "RE_kwDOCZwVgs4FhKtB",
    "tag_name": "v4.0.0",
    "target_commitish": "master",
    "name": "v4.0.0",
    "draft": false,
    "prerelease": false,
    "created_at": "2023-02-15T16:41:30Z",
    "published_at": "2023-02-15T16:42:36Z",
    "assets": [

    ],
    "tarball_url": "https://api.github.com/repos/paritytech/ink/tarball/v4.0.0",
    "zipball_url": "https://api.github.com/repos/paritytech/ink/zipball/v4.0.0",
    "body": "## Version 4.0.0\r\n\r\nThe latest stable release of ink! is here 🥳\r\n\r\nThis version brings a lot of usability improvements, making the language better suited for the needs of production parachains.\r\n\r\nA couple of highlights include:\r\n- Changes to how contract storage works, which significantly reduced the sizes of\r\n  contract binaries\r\n- A new end-to-end testing framework, letting you easily write integration tests\r\n- Changes to the metadata format, which (in part) makes error handling more expressive\r\n\r\nThere's a lot more to dig through, so take some time to poke around the `CHANGELOG` (including the `4.0.0-alpha` and `4.0.0-beta` releases).\r\n\r\nYou may notice there have been a few breaking changes. No need to be scared though, we wrote up a [migration guide](https://use.ink/faq/migrating-from-ink-3-to-4) covering all of the breaking changes and how to update your ink! 3.x contract accordingly.\r\n\r\nThanks to everyone that helped make this release possible ❤️\r\n\r\n### Compatibility\r\n\r\nIn order to build contracts which use ink! `v4.0.0` you need to use `cargo-contract` [`v2.0.0`](https://github.com/paritytech/cargo-contract/releases/tag/v2.0.0). You can install it as follows:\r\n\r\n`cargo install cargo-contract --forced --locked`\r\n\r\nYou will also need to use a version of [`pallet-contracts`](https://github.com/paritytech/substrate/tree/master/frame/contracts) later than [polkadot-v0.9.37](https://github.com/paritytech/substrate/tree/polkadot-v0.9.37) in your node.\r\n\r\nThe [`v0.24.0`](https://github.com/paritytech/substrate-contracts-node/releases/tag/v0.24.0) release of the [`substrate-contracts-node`](https://github.com/paritytech/substrate-contracts-node) is compatible with the ink! `4.0.0` release.\r\n\r\nFor full compatibility requirements see the [migration guide](https://use.ink/faq/migrating-from-ink-3-to-4/#compatibility).\r\n\r\n### Added\r\n- Add `Mapping::contains(key)` and `Mapping::insert_return_size(key, val)` ‒ [#1224](https://github.com/paritytech/ink/pull/1224)\r\n- Add [`payment-channel`](https://github.com/paritytech/ink/tree/master/examples/payment-channel) example ‒ [#1248](https://github.com/paritytech/ink/pull/1248) (thanks [@kanishkatn](https://github.com/kanishkatn)!)\r\n- Add `version` field to ink! metadata ‒ [#1313](https://github.com/paritytech/ink/pull/1313)\r\n- The `rand-extension` example has been adapted to an updated version of the `ChainExtension` API ‒ [#1356](https://github.com/paritytech/ink/pull/1356)\r\n- Add `ink_env::pay_with_call!` helper macro for off-chain emulation of sending payments with contract message calls ‒ [#1379](https://github.com/paritytech/ink/pull/1379)\r\n- Allow using `Result<Self, Error>` as a return type in constructors ‒ [#1446](https://github.com/paritytech/ink/pull/1446)\r\n- Add `Mapping::take()` function allowing to get a value removing it from storage ‒ [#1461](https://github.com/paritytech/ink/pull/1461)\r\n- Add E2E testing framework MVP ‒ [#1395](https://github.com/paritytech/ink/pull/1395)\r\n- Add E2E tests for `Mapping` functions - [#1492](https://github.com/paritytech/ink/pull/1492)\r\n- E2E: expose call dry-run method ‒ [#1624](https://github.com/paritytech/ink/pull/1624)\r\n- Make cross-contract callee non-optional ‒ [#1636](https://github.com/paritytech/ink/pull/1636)\r\n- Support custom environment in E2E tests - [#1645](https://github.com/paritytech/ink/pull/1645) (thanks [@pmikolajczyk41](https://github.com/pmikolajczyk41)!)\r\n\r\n### Changed\r\n- Contract size optimization in case contract doesn't accept payment ‒ [#1267](https://github.com/paritytech/ink/pull/1267) (thanks [@xgreenx](https://github.com/xgreenx)!)\r\n- Move ink! linter into `ink` repository ‒ [#1361](https://github.com/paritytech/ink/pull/1267)\r\n- Introduce `ink` entrance crate ‒ [#1223](https://github.com/paritytech/ink/pull/1223)\r\n- Use `XXH32` instead of `sha256` for calculating storage keys ‒ [#1393](https://github.com/paritytech/ink/pull/1393)\r\n- Storage Refactoring ‒ [#1331](https://github.com/paritytech/ink/pull/1331)\r\n- Add support for language level errors (`LangError`) ‒ [#1450](https://github.com/paritytech/ink/pull/1450)\r\n- Return `LangError`s from constructors ‒ [#1504](https://github.com/paritytech/ink/pull/1504)\r\n- Update `scale-info` requirement to `2.3` ‒ [#1467](https://github.com/paritytech/ink/pull/1467)\r\n- Merge `Mapping::insert(key, val)` and `Mapping::insert_return_size(key, val)` into one method - [#1463](https://github.com/paritytech/ink/pull/1463)\r\n- FFI: no more `__unstable__` wasm import module ‒ [#1522](https://github.com/paritytech/ink/pull/1522)\r\n- Clean up CallBuilder `return()` type ‒ [#1525](https://github.com/paritytech/ink/pull/1525)\r\n- Fix trait message return type metadata ‒ [#1531](https://github.com/paritytech/ink/pull/1531)\r\n- Bump Dylint dependencies ‒ [#1551](https://github.com/paritytech/ink/pull/1551)\r\n- Stabilize `take_storage` ‒ [#1568](https://github.com/paritytech/ink/pull/1568)\r\n- Chain Extension: Evaluation of method return type at compile time ‒ [#1569](https://github.com/paritytech/ink/pull/1569)\r\n- Make more functions be const ‒ [#1574](https://github.com/paritytech/ink/pull/1574) (thanks [@yjhmelody](https://github.com/yjhmelody)!)\r\n- Unify fallible and non fallible `instantiate` methods ‒ [#1591](https://github.com/paritytech/ink/pull/1591)\r\n- Make `CallBuilder` and `CreateBuilder` error handling optional ‒ [#1602](https://github.com/paritytech/ink/pull/1602)\r\n- Rename `CallBuilder::fire()` method to `invoke()` ‒ [#1604](https://github.com/paritytech/ink/pull/1604)\r\n- chore: add minimum rust version to the ink crate ‒ [#1609](https://github.com/paritytech/ink/pull/1609) (thanks [@Kurtsley](https://github.com/Kurtsley)!)\r\n- Rename `_checked` codegen call methods with `try_` ‒ [#1621](https://github.com/paritytech/ink/pull/1621)\r\n- Bump Substrate and `subxt` dependencies ‒ [#1549](https://github.com/paritytech/ink/pull/1549)\r\n- E2E: spawn a separate contracts node instance per test ‒ [#1642](https://github.com/paritytech/ink/pull/1642)\r\n\r\n### Fixed\r\n- Trim single whitespace prefix in the metadata `docs` field ‒ [#1385](https://github.com/paritytech/ink/pull/1385)\r\n- Allow pay_with_call to take multiple arguments ‒ [#1401](https://github.com/paritytech/ink/pull/1401)\r\n- Add Determinism enum from pallet-contracts ‒ [#1547](https://github.com/paritytech/ink/pull/1547)\r\n- Added missed `WhereClosure` for the generics into `storage_item` ‒ [#1536](https://github.com/paritytech/ink/pull/1536) (thanks [@xgreenx](https://github.com/xgreenx)!)\r\n\r\n### Removed\r\n- Implement `ecdsa_to_eth_address()` and remove `eth_compatibility` crate ‒ [#1233](https://github.com/paritytech/ink/pull/1233)\r\n- Remove `wee-alloc` ‒ [#1403](https://github.com/paritytech/ink/pull/1403)\r\n- Remove `ink_env::random` function ‒ [#1442](https://github.com/paritytech/ink/pull/1442)\r\n- Remove `Default` implementation for AccountId ‒ [#1255](https://github.com/paritytech/ink/pull/1255)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/ink/releases/92580673/reactions",
      "total_count": 16,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 7,
      "confused": 0,
      "heart": 7,
      "rocket": 2,
      "eyes": 0
    }
  },
  {
    "url": "https://api.github.com/repos/paritytech/ink/releases/91033396",
    "assets_url": "https://api.github.com/repos/paritytech/ink/releases/91033396/assets",
    "upload_url": "https://uploads.github.com/repos/paritytech/ink/releases/91033396/assets{?name,label}",
    "html_url": "https://github.com/paritytech/ink/releases/tag/v4.0.0-rc",
    "id": 91033396,
    "author": {
      "login": "ascjones",
      "id": 75586,
      "node_id": "MDQ6VXNlcjc1NTg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/75586?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ascjones",
      "html_url": "https://github.com/ascjones",
      "followers_url": "https://api.github.com/users/ascjones/followers",
      "following_url": "https://api.github.com/users/ascjones/following{/other_user}",
      "gists_url": "https://api.github.com/users/ascjones/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ascjones/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ascjones/subscriptions",
      "organizations_url": "https://api.github.com/users/ascjones/orgs",
      "repos_url": "https://api.github.com/users/ascjones/repos",
      "events_url": "https://api.github.com/users/ascjones/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ascjones/received_events",
      "type": "User",
      "site_admin": false
    },
    "node_id": "RE_kwDOCZwVgs4FbQ80",
    "tag_name": "v4.0.0-rc",
    "target_commitish": "master",
    "name": "v4.0.0-rc",
    "draft": false,
    "prerelease": true,
    "created_at": "2023-02-01T20:14:19Z",
    "published_at": "2023-02-01T20:15:45Z",
    "assets": [

    ],
    "tarball_url": "https://api.github.com/repos/paritytech/ink/tarball/v4.0.0-rc",
    "zipball_url": "https://api.github.com/repos/paritytech/ink/zipball/v4.0.0-rc",
    "body": "The first release candidate is here! This is the first release which could become the final \r\n`v4.0.0`. Any subsequent release candidates should only contain bug fixes: no API changes, \r\nbreaking or otherwise.\r\n\r\n### Breaking Changes\r\n\r\n1. We've renamed some of the generated message methods on the `ContractRef` struct. They\r\n   have been changed from `_checked` to `try_` ([#1621](https://github.com/paritytech/ink/pull/1621))\r\n1. We have removed the `Default` implementation for `AccountId`s. This is because of\r\n   security concerns around the use of the zero address which has a known private key in\r\n   the `sr25519` and `ed25519` curves ([#1255](https://github.com/paritytech/ink/pull/1255)).\r\n1. We have replaced the `CallBuilder::callee()` method with a `call()` method and also\r\n   added a `delegate()` method. This streamlines the `Call` and `DelegateCall` workflows\r\n   ([#1636](https://github.com/paritytech/ink/pull/1636))\r\n\r\n### Added\r\n- E2E: expose call dry-run method ‒ [#1624](https://github.com/paritytech/ink/pull/1624)\r\n- Make cross-contract callee non-optional ‒ [#1636](https://github.com/paritytech/ink/pull/1636)\r\n\r\n### Changed\r\n- Rename `_checked` codegen call methods with `try_` ‒ [#1621](https://github.com/paritytech/ink/pull/1621)\r\n- Bump Substrate and `subxt` dependencies ‒ [#1549](https://github.com/paritytech/ink/pull/1549)\r\n\r\n### Removed\r\n- Remove `Default` implementation for AccountId ‒ [#1255](https://github.com/paritytech/ink/pull/1255)",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/ink/releases/91033396/reactions",
      "total_count": 10,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 5,
      "confused": 0,
      "heart": 2,
      "rocket": 0,
      "eyes": 0
    }
  },
  {
    "url": "https://api.github.com/repos/paritytech/ink/releases/90160749",
    "assets_url": "https://api.github.com/repos/paritytech/ink/releases/90160749/assets",
    "upload_url": "https://uploads.github.com/repos/paritytech/ink/releases/90160749/assets{?name,label}",
    "html_url": "https://github.com/paritytech/ink/releases/tag/v4.0.0-beta.1",
    "id": 90160749,
    "author": {
      "login": "ascjones",
      "id": 75586,
      "node_id": "MDQ6VXNlcjc1NTg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/75586?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ascjones",
      "html_url": "https://github.com/ascjones",
      "followers_url": "https://api.github.com/users/ascjones/followers",
      "following_url": "https://api.github.com/users/ascjones/following{/other_user}",
      "gists_url": "https://api.github.com/users/ascjones/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ascjones/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ascjones/subscriptions",
      "organizations_url": "https://api.github.com/users/ascjones/orgs",
      "repos_url": "https://api.github.com/users/ascjones/repos",
      "events_url": "https://api.github.com/users/ascjones/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ascjones/received_events",
      "type": "User",
      "site_admin": false
    },
    "node_id": "RE_kwDOCZwVgs4FX75t",
    "tag_name": "v4.0.0-beta.1",
    "target_commitish": "master",
    "name": "v4.0.0-beta.1",
    "draft": false,
    "prerelease": true,
    "created_at": "2023-01-25T11:22:23Z",
    "published_at": "2023-01-25T11:23:34Z",
    "assets": [

    ],
    "tarball_url": "https://api.github.com/repos/paritytech/ink/tarball/v4.0.0-beta.1",
    "zipball_url": "https://api.github.com/repos/paritytech/ink/zipball/v4.0.0-beta.1",
    "body": "_This supersedes #1590, but RC coming soon™_\r\n\r\n## Version 4.0.0-beta.1\r\nThe coolest feature included in this release is the first first published version of\r\nink!'s native [\"end-to-end\" (E2E) testing framework](https://github.com/paritytech/ink/issues/1234).\r\n\r\nThis enables testing of a contract by deploying and calling it on a Substrate node with\r\n`pallet-contracts`. See the [`erc20` example](./examples/erc20/lib.rs) for usage.\r\n\r\n### Breaking Changes\r\nThis release includes a couple of breaking changes.\r\n\r\n1. The `CallBuilder::returns()` method does not require an extra `MessageResult` anymore\r\n   as the type is now added under the hood [(#1525)](https://github.com/paritytech/ink/pull/1525)\r\n1. The `CallBuilder::invoke()` and `CreateBuilder::instantiate() `methods now unwrap the\r\n   `Result` from `pallet-contracts` under the hood ([#1602](https://github.com/paritytech/ink/pull/1602))\r\n   If you wish to handle the error use the new `try_` variants of those methods instead.\r\n1. The `CallBuilder::fire()` method has been renamed to `invoke()`\r\n   ([#1604](https://github.com/paritytech/ink/pull/1604))\r\n1. The `returns_result` flag has been removed from the `#[ink(extension = …)]` attribute\r\n   ([#1569](https://github.com/paritytech/ink/pull/1569))\r\n   We now infer this information at compile time. If `handle_status` is set to `true`,\r\n   the return type will still be wrapped into `Result` as before.\r\n1. The Minimum Supported Rust Version (MSRV) has been set to `1.63.0`. This was already\r\n   the case, but previously it was enforced by `cargo-contract` instead of ink!\r\n   ([#1609](https://github.com/paritytech/ink/pull/1609))\r\n\r\n### Added\r\n- Add E2E testing framework MVP ‒ [#1395](https://github.com/paritytech/ink/pull/1395)\r\n- Add E2E tests for `Mapping` functions - [#1492](https://github.com/paritytech/ink/pull/1492)\r\n\r\n### Fixed\r\n- Add Determinism enum from pallet-contracts ‒ [#1547](https://github.com/paritytech/ink/pull/1547)\r\n- Added missed `WhereClosure` for the generics into `storage_item` ‒ [#1536](https://github.com/paritytech/ink/pull/1536) (thanks [@xgreenx](https://github.com/xgreenx))\r\n\r\n### Changed\r\n- Handle `LangError` from instantiate ‒ [#1512](https://github.com/paritytech/ink/pull/1512)\r\n- FFI: no more `__unstable__` wasm import module ‒ [#1522](https://github.com/paritytech/ink/pull/1522)\r\n- Clean up CallBuilder `return()` type ‒ [#1525](https://github.com/paritytech/ink/pull/1525)\r\n- Fix trait message return type metadata ‒ [#1531](https://github.com/paritytech/ink/pull/1531)\r\n- Bump Dylint dependencies ‒ [#1551](https://github.com/paritytech/ink/pull/1551)\r\n- Stabilize `take_storage` ‒ [#1568](https://github.com/paritytech/ink/pull/1568)\r\n- Chain Extension: Evaluation of method return type at compile time ‒ [#1569](https://github.com/paritytech/ink/pull/1569)\r\n- Make more functions be const ‒ [#1574](https://github.com/paritytech/ink/pull/1574) (thanks [@yjhmelody](https://github.com/yjhmelody))\r\n- Unify fallible and non fallible `instantiate` methods ‒ [#1591](https://github.com/paritytech/ink/pull/1591)\r\n- Make `CallBuilder` and `CreateBuilder` error handling optional ‒ [#1602](https://github.com/paritytech/ink/pull/1602)\r\n- Rename `CallBuilder::fire()` method to `invoke()` ‒ [#1604](https://github.com/paritytech/ink/pull/1604)\r\n- chore: add minimum rust version to the ink crate ‒ [#1609](https://github.com/paritytech/ink/pull/1609) (thanks [@Kurtsley](https://github.com/Kurtsley))\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/ink/releases/90160749/reactions",
      "total_count": 4,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 4,
      "eyes": 0
    }
  },
  {
    "url": "https://api.github.com/repos/paritytech/ink/releases/83929600",
    "assets_url": "https://api.github.com/repos/paritytech/ink/releases/83929600/assets",
    "upload_url": "https://uploads.github.com/repos/paritytech/ink/releases/83929600/assets{?name,label}",
    "html_url": "https://github.com/paritytech/ink/releases/tag/v4.0.0-beta",
    "id": 83929600,
    "author": {
      "login": "HCastano",
      "id": 12344623,
      "node_id": "MDQ6VXNlcjEyMzQ0NjIz",
      "avatar_url": "https://avatars.githubusercontent.com/u/12344623?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/HCastano",
      "html_url": "https://github.com/HCastano",
      "followers_url": "https://api.github.com/users/HCastano/followers",
      "following_url": "https://api.github.com/users/HCastano/following{/other_user}",
      "gists_url": "https://api.github.com/users/HCastano/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/HCastano/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/HCastano/subscriptions",
      "organizations_url": "https://api.github.com/users/HCastano/orgs",
      "repos_url": "https://api.github.com/users/HCastano/repos",
      "events_url": "https://api.github.com/users/HCastano/events{/privacy}",
      "received_events_url": "https://api.github.com/users/HCastano/received_events",
      "type": "User",
      "site_admin": false
    },
    "node_id": "RE_kwDOCZwVgs4FAKoA",
    "tag_name": "v4.0.0-beta",
    "target_commitish": "master",
    "name": "v4.0.0-beta",
    "draft": false,
    "prerelease": true,
    "created_at": "2022-11-22T22:44:02Z",
    "published_at": "2022-11-22T22:53:23Z",
    "assets": [

    ],
    "tarball_url": "https://api.github.com/repos/paritytech/ink/tarball/v4.0.0-beta",
    "zipball_url": "https://api.github.com/repos/paritytech/ink/zipball/v4.0.0-beta",
    "body": "# Version `4.0.0-beta`\r\n\r\nThe focus of the first `beta` release is to establish the stable ABI for the final `4.0.0`\r\nrelease. It means that whilst subsequent `beta` releases may contain breaking contract\r\n*code* changes, the ABI will remain the same so that any contract compiled and deployed\r\nwith `4.0.0-beta` continue to be compatible with all future `4.0.0` versions.\r\n\r\n### Compatibility\r\nIn order to build contracts which use ink! `v4.0.0-beta` you need to use\r\n`cargo-contract` [`v2.0.0-beta`](https://github.com/paritytech/cargo-contract/releases/tag/v2.0.0-beta).\r\n\r\nYou can install it as follows:\r\n\r\n`cargo install cargo-contract --version 2.0.0-beta`\r\n\r\nYou will also need to use a version of [`pallet-contracts`](https://github.com/paritytech/substrate/tree/master/frame/contracts) later than [265e3f1](https://github.com/paritytech/substrate/commit/265e3f12a2937fe4f71280b3652471627609d04f) (Nov 3, 2022)\r\nin your node.\r\n\r\nThe [`v0.22.1`](https://github.com/paritytech/substrate-contracts-node/releases/tag/v0.22.1) release of the [`substrate-contracts-node`](https://github.com/paritytech/substrate-contracts-node) is\r\ncompatible with  the ink! `4.0.0-beta` release.\r\n\r\n## Breaking Changes\r\n\r\n### Constructors and Messages now return `LangError`s\r\n\r\nWe have added a way to handle errors that are neither specific to a particular contract,\r\nnor from the underlying execution environment (e.g `pallet-contracts`). Instead these are\r\nerrors that may come from the smart contracting language itself.\r\n\r\nFor example, take the case where a contract message is called using an invalid selector.\r\nThis is not something a smart contract author should need to define as failure case, nor\r\nis it something that the Contracts pallet needs to be aware of.\r\n\r\nPreviously, the contract execution would trap if an invalid selector was used, leaving\r\ncallers with no way to handle the error gracefully. This can now be handled with the help\r\nof the newly added `LangError`.\r\n\r\nIn short, this change means that all ink! messages and constructors now return a\r\n`Result<R, LangError>`, where `R` is the original return type. Contract callers can\r\nchoose to handle the `LangError`.\r\n\r\nIn order to make this error compatible with other languages we have also added a\r\n`lang_error` field to the metadata format. This will be the central registry of all the\r\ndifferent error variants which languages may want to emit in the future.\r\n\r\nRelated pull-requests:\r\n- https://github.com/paritytech/ink/pull/1450\r\n- https://github.com/paritytech/ink/pull/1504\r\n\r\nRelated discussions:\r\n- https://github.com/paritytech/ink/issues/1207\r\n- https://github.com/paritytech/substrate/issues/11018\r\n- https://github.com/paritytech/ink/issues/1002\r\n\r\n### Random function removed\r\nWe had to remove [`ink_env::random`](https://docs.rs/ink_env/3.3.1/ink_env/fn.random.html) with [#1442](https://github.com/paritytech/ink/pull/1442).\r\n\r\nThis function allowed contract developers getting random entropy.\r\nThere is unfortunately no way how this can be done safely enough\r\nwith built-in Substrate primitives on-chain currently. We're\r\nfollowing the recommendation of our auditors to remove it.\r\n\r\nThe alternative right now is to provide random entropy off-chain to\r\nthe contract, to use a random entropy oracle, or to have a chain-extension\r\nthat does this, in case the chain has a possibility to do so.\r\n\r\nWe hope to bring this function back in a future release of ink!, the\r\nbest hope right now is that it could come back with [Sassafras](https://wiki.polkadot.network/docs/learn-consensus#badass-babe-sassafras), a block production\r\nprotocol for future versions of Polkadot.\r\n\r\n### Added\r\n- Allow using `Result<Self, Error>` as a return type in constructors ‒ [#1446](https://github.com/paritytech/ink/pull/1446)\r\n- Add `Mapping::take()` function allowing to get a value removing it from storage ‒ [#1461](https://github.com/paritytech/ink/pull/1461)\r\n\r\n### Changed\r\n- Add support for language level errors (`LangError`) ‒ [#1450](https://github.com/paritytech/ink/pull/1450)\r\n- Return `LangError`s from constructors ‒ [#1504](https://github.com/paritytech/ink/pull/1504)\r\n- Update `scale-info` requirement to `2.3` ‒ [#1467](https://github.com/paritytech/ink/pull/1467)\r\n- Merge `Mapping::insert(key, val)` and `Mapping::insert_return_size(key, val)` into one method - [#1463](https://github.com/paritytech/ink/pull/1463)\r\n\r\n### Removed\r\n- Remove `ink_env::random` function ‒ [#1442](https://github.com/paritytech/ink/pull/1442)",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/ink/releases/83929600/reactions",
      "total_count": 4,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 4
    }
  },
  {
    "url": "https://api.github.com/repos/paritytech/ink/releases/80646304",
    "assets_url": "https://api.github.com/repos/paritytech/ink/releases/80646304/assets",
    "upload_url": "https://uploads.github.com/repos/paritytech/ink/releases/80646304/assets{?name,label}",
    "html_url": "https://github.com/paritytech/ink/releases/tag/v3.4.0",
    "id": 80646304,
    "author": {
      "login": "agryaznov",
      "id": 3878903,
      "node_id": "MDQ6VXNlcjM4Nzg5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3878903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/agryaznov",
      "html_url": "https://github.com/agryaznov",
      "followers_url": "https://api.github.com/users/agryaznov/followers",
      "following_url": "https://api.github.com/users/agryaznov/following{/other_user}",
      "gists_url": "https://api.github.com/users/agryaznov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/agryaznov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agryaznov/subscriptions",
      "organizations_url": "https://api.github.com/users/agryaznov/orgs",
      "repos_url": "https://api.github.com/users/agryaznov/repos",
      "events_url": "https://api.github.com/users/agryaznov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/agryaznov/received_events",
      "type": "User",
      "site_admin": false
    },
    "node_id": "RE_kwDOCZwVgs4EzpCg",
    "tag_name": "v3.4.0",
    "target_commitish": "v3.x.x",
    "name": "v3.4.0",
    "draft": false,
    "prerelease": false,
    "created_at": "2022-10-21T18:07:56Z",
    "published_at": "2022-10-21T18:11:19Z",
    "assets": [

    ],
    "tarball_url": "https://api.github.com/repos/paritytech/ink/tarball/v3.4.0",
    "zipball_url": "https://api.github.com/repos/paritytech/ink/zipball/v3.4.0",
    "body": "# Version 3.4.0\r\n\r\nWe keep ink! v3 updated with nice features and fixes from the `master` branch.\r\n\r\nThis release:\r\n\r\n- Introduces the `ink_env::pay_with_call!` helper macro for the emulation of invoking payble messages in off-chain tests.\r\n  As response to ink! developers request on the [ Substrate StackExchange](https://substrate.stackexchange.com/a/4793/472).\r\n- Fixes contracts compilation error with the latest Rust `+nightly`  ‒ [#1417](https://github.com/paritytech/ink/issues/1417) (thanks [@xgreenx](https://github.com/xgreenx)).\r\n\r\nSee the back portation PR [#1439](https://github.com/paritytech/ink/pull/1439) for details.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/ink/releases/80646304/reactions",
      "total_count": 5,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 5,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    }
  },
  {
    "url": "https://api.github.com/repos/paritytech/ink/releases/77765068",
    "assets_url": "https://api.github.com/repos/paritytech/ink/releases/77765068/assets",
    "upload_url": "https://uploads.github.com/repos/paritytech/ink/releases/77765068/assets{?name,label}",
    "html_url": "https://github.com/paritytech/ink/releases/tag/v4.0.0-alpha.3",
    "id": 77765068,
    "author": {
      "login": "ascjones",
      "id": 75586,
      "node_id": "MDQ6VXNlcjc1NTg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/75586?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ascjones",
      "html_url": "https://github.com/ascjones",
      "followers_url": "https://api.github.com/users/ascjones/followers",
      "following_url": "https://api.github.com/users/ascjones/following{/other_user}",
      "gists_url": "https://api.github.com/users/ascjones/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ascjones/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ascjones/subscriptions",
      "organizations_url": "https://api.github.com/users/ascjones/orgs",
      "repos_url": "https://api.github.com/users/ascjones/repos",
      "events_url": "https://api.github.com/users/ascjones/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ascjones/received_events",
      "type": "User",
      "site_admin": false
    },
    "node_id": "RE_kwDOCZwVgs4EopnM",
    "tag_name": "v4.0.0-alpha.3",
    "target_commitish": "master",
    "name": "v4.0.0-alpha.3",
    "draft": false,
    "prerelease": true,
    "created_at": "2022-09-21T12:07:37Z",
    "published_at": "2022-09-21T12:11:38Z",
    "assets": [

    ],
    "tarball_url": "https://api.github.com/repos/paritytech/ink/tarball/v4.0.0-alpha.3",
    "zipball_url": "https://api.github.com/repos/paritytech/ink/zipball/v4.0.0-alpha.3",
    "body": "**4.0.0-alpha.2 was skipped because of an error in the release process**\r\n\r\n### Breaking Changes\r\n\r\n#### New `ink` crate\r\nThe `ink_lang` crate has been replaced in [#1223](https://github.com/paritytech/ink/pull/1223) by a new top level `ink`\r\ncrate. All existing sub-crates are reexported and should be used via the new `ink` crate, so e.g. `ink::env` instead of\r\n`ink_env`. Contract authors should now import the top level `ink` crate instead of the individual crates.\r\n\r\n##### Migration\r\n- In `Cargo.toml` Replace all individual `ink_*` crate dependencies with the `ink` crate.\r\n- In the contract source:\r\n  - Remove the commonly used `use ink_lang as ink` idiom.\r\n  - Replace all usages of individual crates with reexports, e.g. `ink_env` ➜ `ink::env`.\r\n\r\n#### Storage Rework\r\n[#1331](https://github.com/paritytech/ink/pull/1331) changes the way `ink!` works with contract storage. Storage keys \r\nare generated at compile-time, and user facing abstractions which determine how contract data is laid out in storage\r\nhave changed.\r\n\r\n##### Migration\r\n- Initialize `Mapping` fields with `Mapping::default()` instead of  `ink_lang::utils::initialize_contract` in\r\nconstructors. See [`erc20`](./examples/erc20/lib.rs) and other examples which use a `Mapping`.\r\n- Remove `SpreadAllocate`, `SpreadLayout` and `PackedLayout` implementations.\r\n\r\n#### Removal of `wee-alloc` support\r\nink! uses a bump allocator by default, additionally we supported another allocator (`wee-alloc`)\r\nthrough a feature flag. `wee-alloc` is no longer maintained and we removed support for it.\r\n\r\n### Changed\r\n- Introduce `ink` entrance crate ‒ [#1223](https://github.com/paritytech/ink/pull/1223)\r\n- Use `XXH32` instead of `sha256` for calculating storage keys ‒ [#1393](https://github.com/paritytech/ink/pull/1393)\r\n\r\n### Fixed\r\n- Trim single whitespace prefix in the metadata `docs` field ‒ [#1385](https://github.com/paritytech/ink/pull/1385)\r\n- Allow pay_with_call to take multiple arguments ‒ [#1401](https://github.com/paritytech/ink/pull/1401)\r\n\r\n### Added\r\n- Add `ink_env::pay_with_call!` helper macro for off-chain emulation of sending payments with contract message calls ‒ [#1379](https://github.com/paritytech/ink/pull/1379)\r\n\r\n### Removed\r\n- Remove `wee-alloc` ‒ [#1403](https://github.com/paritytech/ink/pull/1403)",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/ink/releases/77765068/reactions",
      "total_count": 3,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    }
  },
  {
    "url": "https://api.github.com/repos/paritytech/ink/releases/75379556",
    "assets_url": "https://api.github.com/repos/paritytech/ink/releases/75379556/assets",
    "upload_url": "https://uploads.github.com/repos/paritytech/ink/releases/75379556/assets{?name,label}",
    "html_url": "https://github.com/paritytech/ink/releases/tag/v4.0.0-alpha.1",
    "id": 75379556,
    "author": {
      "login": "HCastano",
      "id": 12344623,
      "node_id": "MDQ6VXNlcjEyMzQ0NjIz",
      "avatar_url": "https://avatars.githubusercontent.com/u/12344623?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/HCastano",
      "html_url": "https://github.com/HCastano",
      "followers_url": "https://api.github.com/users/HCastano/followers",
      "following_url": "https://api.github.com/users/HCastano/following{/other_user}",
      "gists_url": "https://api.github.com/users/HCastano/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/HCastano/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/HCastano/subscriptions",
      "organizations_url": "https://api.github.com/users/HCastano/orgs",
      "repos_url": "https://api.github.com/users/HCastano/repos",
      "events_url": "https://api.github.com/users/HCastano/events{/privacy}",
      "received_events_url": "https://api.github.com/users/HCastano/received_events",
      "type": "User",
      "site_admin": false
    },
    "node_id": "RE_kwDOCZwVgs4EfjNk",
    "tag_name": "v4.0.0-alpha.1",
    "target_commitish": "master",
    "name": "v4.0.0-alpha.1",
    "draft": false,
    "prerelease": true,
    "created_at": "2022-08-24T19:24:50Z",
    "published_at": "2022-08-25T18:14:04Z",
    "assets": [

    ],
    "tarball_url": "https://api.github.com/repos/paritytech/ink/tarball/v4.0.0-alpha.1",
    "zipball_url": "https://api.github.com/repos/paritytech/ink/zipball/v4.0.0-alpha.1",
    "body": "# Version 4.0.0-alpha.1\r\n\r\n## Compatibility\r\nIn order to build contracts which use ink! `v4.0.0-alpha.1` you need to use `cargo-contract`\r\n[`v2.0.0-alpha.1`](https://github.com/paritytech/cargo-contract/releases/tag/v2.0.0-alpha.1). You can install it as follows:\r\n\r\n`cargo install cargo-contract --version 2.0.0-alpha.1`\r\n\r\nWe recommend using a version of the [`pallet-contracts`](https://github.com/paritytech/substrate/tree/master/frame/contracts) later than [6b85535](https://github.com/paritytech/substrate/tree/6b8553511112afd5ae7e8e6877dc2f467850f155)\r\n(Aug 12, 2022) in your node.\r\n\r\nThe compatibility issues will be with `ChainExtension`'s and the functions mentioned above.\r\n\r\n## Breaking Changes\r\nThis release contains a few breaking changes. These are indicated with the :x: emoji.\r\nMost of these were intitially introduced in `v3.1.0` and `v3.2.0` releases but\r\ncompatibility was restored in `v3.3.0`.\r\n\r\n- As part of [#1224](https://github.com/paritytech/ink/pull/1224) the return type of `ink_env::set_contract_storage()` was changed to\r\nreturn an `Option<u32>` instead of `()`.\r\n- As part of [#1233](https://github.com/paritytech/ink/pull/1233) the `eth_compatibility` crate was removed. The\r\n  `ecdsa_to_eth_address()` function from it can now be found in the `ink_env` crate.\r\n- As part of [#1267](https://github.com/paritytech/ink/pull/1267) an argument to `ink_lang::codegen::execute_constructor()` (which is\r\n  used internally by the ink! macros) was removed.\r\n- As part of [#1313](https://github.com/paritytech/ink/pull/1313) the ink! ABI was changed so that the version was specified using a\r\n  dedicated `version` key instead of an implicit key which wrapped the entire ABI.\r\n\r\n## Added\r\n- :x: Add `Mapping::contains(key)` and `Mapping::insert_return_size(key, val)` ‒ [#1224](https://github.com/paritytech/ink/pull/1224)\r\n- Add [`payment-channel`](https://github.com/paritytech/ink/tree/master/examples/payment-channel) example ‒ [#1248](https://github.com/paritytech/ink/pull/1248)\r\n- :x: Add `version` field to ink! metadata ‒ [#1313](https://github.com/paritytech/ink/pull/1313)\r\n- The `rand-extension` example has been adapted to an updated version of the `ChainExtension` API ‒ [#1356](https://github.com/paritytech/ink/pull/1356)\r\n\r\n## Changed\r\n- :x: Contract size optimization in case contract doesn't accept payment ‒ [#1267](https://github.com/paritytech/ink/pull/1267) (thanks [@xgreenx](https://github.com/xgreenx)).\r\n- Move ink! linter into `ink` repository ‒ [#1361](https://github.com/paritytech/ink/pull/1267)\r\n\r\n## Removed\r\n- :x: Implement ecdsa_to_eth_address() and remove eth_compatibility crate ‒ [#1233](https://github.com/paritytech/ink/pull/1233)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/ink/releases/75379556/reactions",
      "total_count": 2,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 2,
      "eyes": 0
    }
  },
  {
    "url": "https://api.github.com/repos/paritytech/ink/releases/74015370",
    "assets_url": "https://api.github.com/repos/paritytech/ink/releases/74015370/assets",
    "upload_url": "https://uploads.github.com/repos/paritytech/ink/releases/74015370/assets{?name,label}",
    "html_url": "https://github.com/paritytech/ink/releases/tag/v3.3.1",
    "id": 74015370,
    "author": {
      "login": "HCastano",
      "id": 12344623,
      "node_id": "MDQ6VXNlcjEyMzQ0NjIz",
      "avatar_url": "https://avatars.githubusercontent.com/u/12344623?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/HCastano",
      "html_url": "https://github.com/HCastano",
      "followers_url": "https://api.github.com/users/HCastano/followers",
      "following_url": "https://api.github.com/users/HCastano/following{/other_user}",
      "gists_url": "https://api.github.com/users/HCastano/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/HCastano/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/HCastano/subscriptions",
      "organizations_url": "https://api.github.com/users/HCastano/orgs",
      "repos_url": "https://api.github.com/users/HCastano/repos",
      "events_url": "https://api.github.com/users/HCastano/events{/privacy}",
      "received_events_url": "https://api.github.com/users/HCastano/received_events",
      "type": "User",
      "site_admin": false
    },
    "node_id": "RE_kwDOCZwVgs4EaWKK",
    "tag_name": "v3.3.1",
    "target_commitish": "master",
    "name": "v3.3.1",
    "draft": false,
    "prerelease": false,
    "created_at": "2022-08-09T17:06:08Z",
    "published_at": "2022-08-09T17:10:20Z",
    "assets": [

    ],
    "tarball_url": "https://api.github.com/repos/paritytech/ink/tarball/v3.3.1",
    "zipball_url": "https://api.github.com/repos/paritytech/ink/zipball/v3.3.1",
    "body": "# Version 3.3.1\r\n\r\nAt the moment teams which use both Substrate and ink! in the same codebase are\r\n[experiencing some issues](https://github.com/paritytech/ink/pull/1348#issuecomment-1207477615) with updating to Substrate's [`polkadot-0.9.27` branch](https://github.com/paritytech/substrate/tree/polkadot-v0.9.27).\r\nThis is because that branch uses the `secp256k1@0.24`, which is incompatible with\r\n`secp256k1@0.22`\r\n\r\nThis release bumps the [`secp256k1`](https://github.com/rust-bitcoin/rust-secp256k1/) version from `v0.22` to `v0.24`."
  },
  {
    "url": "https://api.github.com/repos/paritytech/ink/releases/70068327",
    "assets_url": "https://api.github.com/repos/paritytech/ink/releases/70068327/assets",
    "upload_url": "https://uploads.github.com/repos/paritytech/ink/releases/70068327/assets{?name,label}",
    "html_url": "https://github.com/paritytech/ink/releases/tag/v3.3.0",
    "id": 70068327,
    "author": {
      "login": "agryaznov",
      "id": 3878903,
      "node_id": "MDQ6VXNlcjM4Nzg5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3878903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/agryaznov",
      "html_url": "https://github.com/agryaznov",
      "followers_url": "https://api.github.com/users/agryaznov/followers",
      "following_url": "https://api.github.com/users/agryaznov/following{/other_user}",
      "gists_url": "https://api.github.com/users/agryaznov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/agryaznov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agryaznov/subscriptions",
      "organizations_url": "https://api.github.com/users/agryaznov/orgs",
      "repos_url": "https://api.github.com/users/agryaznov/repos",
      "events_url": "https://api.github.com/users/agryaznov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/agryaznov/received_events",
      "type": "User",
      "site_admin": false
    },
    "node_id": "RE_kwDOCZwVgs4ELShn",
    "tag_name": "v3.3.0",
    "target_commitish": "master",
    "name": "v3.3.0",
    "draft": false,
    "prerelease": false,
    "created_at": "2022-06-22T17:01:08Z",
    "published_at": "2022-06-22T17:07:58Z",
    "assets": [

    ],
    "tarball_url": "https://api.github.com/repos/paritytech/ink/tarball/v3.3.0",
    "zipball_url": "https://api.github.com/repos/paritytech/ink/zipball/v3.3.0",
    "body": "\r\n# Version 3.3.0\r\n\r\nThis release restores SemVer compatibility in the `v3.x` series of releases, as well as compatibility with the [`v0.13.0`](https://github.com/paritytech/substrate-contracts-node/releases/tag/v0.13.0) release of the `substrate-contracts-node`.\r\n\r\n## Compatibility\r\nThis version will work fine with *substrate-contracts-node* versions from [0.13.0](https://github.com/paritytech/substrate-contracts-node/releases/tag/v0.13.0) up to [0.16.0](https://github.com/paritytech/substrate-contracts-node/releases/tag/v0.16.0).\r\n\r\n## Changed\r\n*Context: user-reported issues on our SE unveiled backward incompatibility introduced in 3.1.0 release.*\r\n1. [CodeRejected when using ink! v3.1.0](https://substrate.stackexchange.com/questions/2721/cargo-contract-3-0-1)\r\n2. [Incompatibility between ink! v3.0.1 and v3.2.0 ](https://substrate.stackexchange.com/questions/2870/cargo-contract-throws-error-about-supplied-arguments-in-inkconstructor-f)\r\n\r\nThe following has been done to restore backward compatibility:\r\n- Reverted backward-incompatible piece of [#1224](https://github.com/paritytech/ink/pull/1224).\r\n    - The return signature of `ink_env::set_contract_storage()` was changed to return an  `Option<u32>`.  \r\n      This could have broken existing code, so this should've been done in a `MAJOR` release.\r\n    - Under the hood the PR also changed `Mapping::insert()` to use a new SEAL API\r\n      (`[seal1] seal_set_storage`), which resulted in `CodeRejected` errors in nodes which did not have this API (e.g `substrate-contracts-node@0.13.0`).\r\n- Reverted \"Optimise deny_payment. Use everywhere semantic of deny ([#1267](https://github.com/paritytech/ink/pull/1267))\"\r\n  - This one is to restore compatibility between minor versions of ink! crates; see @HCastano's SE [answer](https://substrate.stackexchange.com/a/3000/472) in this regard.\r\n- Reverted backward-incompatible piece of [#1233](https://github.com/paritytech/ink/pull/1233).\r\n    - The removal of the `eth_compatibility` crate should have been done in a `MAJOR` release.\r\n\r\nAll these breaking changes are subjects to the upcoming MAJOR *ink!* release 4.0.0.",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/ink/releases/70068327/reactions",
      "total_count": 7,
      "+1": 5,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 2,
      "rocket": 0,
      "eyes": 0
    },
    "mentions_count": 1
  },
  {
    "url": "https://api.github.com/repos/paritytech/ink/releases/67775608",
    "assets_url": "https://api.github.com/repos/paritytech/ink/releases/67775608/assets",
    "upload_url": "https://uploads.github.com/repos/paritytech/ink/releases/67775608/assets{?name,label}",
    "html_url": "https://github.com/paritytech/ink/releases/tag/v3.2.0",
    "id": 67775608,
    "author": {
      "login": "cmichi",
      "id": 241530,
      "node_id": "MDQ6VXNlcjI0MTUzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/241530?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cmichi",
      "html_url": "https://github.com/cmichi",
      "followers_url": "https://api.github.com/users/cmichi/followers",
      "following_url": "https://api.github.com/users/cmichi/following{/other_user}",
      "gists_url": "https://api.github.com/users/cmichi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cmichi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cmichi/subscriptions",
      "organizations_url": "https://api.github.com/users/cmichi/orgs",
      "repos_url": "https://api.github.com/users/cmichi/repos",
      "events_url": "https://api.github.com/users/cmichi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cmichi/received_events",
      "type": "User",
      "site_admin": false
    },
    "node_id": "RE_kwDOCZwVgs4ECix4",
    "tag_name": "v3.2.0",
    "target_commitish": "master",
    "name": "v3.2.0",
    "draft": false,
    "prerelease": false,
    "created_at": "2022-05-25T09:01:36Z",
    "published_at": "2022-05-25T09:05:29Z",
    "assets": [

    ],
    "tarball_url": "https://api.github.com/repos/paritytech/ink/tarball/v3.2.0",
    "zipball_url": "https://api.github.com/repos/paritytech/ink/zipball/v3.2.0",
    "body": "# Version 3.2.0\r\n\r\n## Compatibility\r\nWe recommend using a version of the [`pallet-contracts`](https://github.com/paritytech/substrate/tree/master/frame/contracts) later than [c0ee2ad](https://github.com/paritytech/substrate/tree/c0ee2adaa54b22ee0df5d1592cd0430961afd95c) (May 23, 2022) in your node.\r\n\r\nThis is the case in the latest release of the [`substrate-contracts-node`](https://github.com/paritytech/substrate-contracts-node)[v0.16.0](https://github.com/paritytech/substrate-contracts-node/releases/tag/v0.16.0).\r\n\r\n## Added\r\n- Contract size optimization in case contract doesn't accept payment ‒ [#1267](https://github.com/paritytech/ink/pull/1267) (thanks [@xgreenx](https://github.com/xgreenx)).\r\n\r\n## Changed\r\n- Two functions have been stabilized: [`ink_env::ecdsa_recover`](https://paritytech.github.io/ink/ink_env/fn.ecdsa_recover.html) and [`ink_env::ecdsa_to_eth_address`](https://paritytech.github.io/ink/ink_env/fn.ecdsa_to_eth_address.html) ‒ [#1270](https://github.com/paritytech/ink/pull/1270) [#1273](https://github.com/paritytech/ink/pull/1273)\r\n\r\n## Fixed\r\n- Fixed bug with recent Rust and `cargo test` ‒ [#1272](https://github.com/paritytech/ink/pull/1272) (thanks [@xgreenx](https://github.com/xgreenx)).\r\n"
  },
  {
    "url": "https://api.github.com/repos/paritytech/ink/releases/67141727",
    "assets_url": "https://api.github.com/repos/paritytech/ink/releases/67141727/assets",
    "upload_url": "https://uploads.github.com/repos/paritytech/ink/releases/67141727/assets{?name,label}",
    "html_url": "https://github.com/paritytech/ink/releases/tag/v3.1.0",
    "id": 67141727,
    "author": {
      "login": "cmichi",
      "id": 241530,
      "node_id": "MDQ6VXNlcjI0MTUzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/241530?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cmichi",
      "html_url": "https://github.com/cmichi",
      "followers_url": "https://api.github.com/users/cmichi/followers",
      "following_url": "https://api.github.com/users/cmichi/following{/other_user}",
      "gists_url": "https://api.github.com/users/cmichi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cmichi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cmichi/subscriptions",
      "organizations_url": "https://api.github.com/users/cmichi/orgs",
      "repos_url": "https://api.github.com/users/cmichi/repos",
      "events_url": "https://api.github.com/users/cmichi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cmichi/received_events",
      "type": "User",
      "site_admin": false
    },
    "node_id": "RE_kwDOCZwVgs4EAIBf",
    "tag_name": "v3.1.0",
    "target_commitish": "master",
    "name": "v3.1.0",
    "draft": false,
    "prerelease": false,
    "created_at": "2022-05-18T06:07:02Z",
    "published_at": "2022-05-18T06:17:41Z",
    "assets": [

    ],
    "tarball_url": "https://api.github.com/repos/paritytech/ink/tarball/v3.1.0",
    "zipball_url": "https://api.github.com/repos/paritytech/ink/zipball/v3.1.0",
    "body": "# Version 3.1.0\r\n\r\n## Compatibility\r\nWe recommend using a version of the [`pallet-contracts`](https://github.com/paritytech/substrate/tree/master/frame/contracts) later than [7d233c2](https://github.com/paritytech/substrate/tree/7d233c2446b5a60662400a0a4bcfb78bb3b79ff7) (May 13, 2022) in your node.\r\n\r\nThis is the case in the latest release of the [`substrate-contracts-node`](https://github.com/paritytech/substrate-contracts-node)[v0.15.1](https://github.com/paritytech/substrate-contracts-node/releases/tag/v0.15.1) and the latest Polkadot release [v0.9.22](https://github.com/paritytech/polkadot/releases/tag/v0.9.22).\r\n\r\n## Breaking Changes\r\nThere are two breaking changes in this release:\r\n\r\n* As part of [#1235](https://github.com/paritytech/ink/pull/1235) the message selectors of your contract may change. A change of selectors would affect your client, frontend, Dapp, etc..\r\n* As part of [#1233](https://github.com/paritytech/ink/pull/1233) we removed the `eth_compatibility` crate.<br>Its recovery functionality has been moved to `ink_env` now: [`ink_env::ecdsa_to_eth_address`](https://paritytech.github.io/ink/ink_env/fn.ecdsa_to_eth_address.html). The reason for this change is that we moved the gas-expensive crypto operations into `pallet-contracts`.<br>The crates `to_default_account_id` function has been removed; the reason for this change is that ink! doesn't have knowledge about the specific Substrate types on the underlying chain. If you want to retain the function in your contract and are just using standard Substrate types you should add the prior functionality to your contract ‒ it was a simple `<Blake2x256 as CryptoHash>::hash(&ecdsa_pubkey[u8; 33])`.\r\n\r\n## New API functions\r\nWe added two new `Mapping` API functions: [`Mapping::contains`](https://paritytech.github.io/ink/ink_storage/struct.Mapping.html#method.contains) and [`Mapping::insert_return_size`](https://paritytech.github.io/ink/ink_storage/struct.Mapping.html#method.insert_return_size) ‒ [#1224](https://github.com/paritytech/ink/pull/1224). These are more gas-efficient than whatever you were using previously.\r\n\r\nAdditionaly there are a couple new `ink_env` functions now:\r\n* [`ink_env::set_code_hash`](https://paritytech.github.io/ink/ink_env/fn.set_code_hash.html)\r\n* [`ink_env::own_code_hash`](https://paritytech.github.io/ink/ink_env/fn.own_code_hash.html)\r\n* [`ink_env::code_hash`](https://paritytech.github.io/ink/ink_env/fn.code_hash.html)\r\n* [`ink_env::ecdsa_to_eth_address`](https://paritytech.github.io/ink/ink_env/fn.ecdsa_to_eth_address.html)\r\n\r\n## New Upgradeable Contract Example\r\n\r\nWe've added a new example: [`upgradeable-contracts/set-code-hash`](https://github.com/paritytech/ink/tree/master/examples/upgradeable-contracts#set-code-hash).\r\n\r\nIt illustrates how the newly added [`ink_env::set_code_hash`](https://paritytech.github.io/ink/ink_env/fn.set_code_hash.html) can be used to implement an upgradeable contract that replaces its own code.\r\n\r\n## Added\r\n- Implement `seal_code_hash` and `seal_own_code_hash` ‒ [#1205](https://github.com/paritytech/ink/pull/1205)\r\n- Add `set_code_hash` function and example ‒ [#1203](https://github.com/paritytech/ink/pull/1203)\r\n- Implement [`ink_env::ecdsa_to_eth_address`](https://paritytech.github.io/ink/ink_env/fn.ecdsa_to_eth_address.html) ‒ [#1233](https://github.com/paritytech/ink/pull/1233)\r\n- Add [`Mapping::contains(key)`](https://paritytech.github.io/ink/ink_storage/struct.Mapping.html#method.contains) and [`Mapping::insert_return_size(key, val)`](https://paritytech.github.io/ink/ink_storage/struct.Mapping.html#method.insert_return_size) ‒ [#1224](https://github.com/paritytech/ink/pull/1224)\r\n\r\n## Fixed\r\n- Fix ordering of message ids if the trait is implemented before the inherent section ‒ [#1235](https://github.com/paritytech/ink/pull/1235)\r\n\r\n## Removed\r\n- Removed `eth_compatibility` crate and moved its functionality partly into `ink_env` ‒ [#1233](https://github.com/paritytech/ink/pull/1233)",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/ink/releases/67141727/reactions",
      "total_count": 2,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 2,
      "rocket": 0,
      "eyes": 0
    }
  },
  {
    "url": "https://api.github.com/repos/paritytech/ink/releases/63755287",
    "assets_url": "https://api.github.com/repos/paritytech/ink/releases/63755287/assets",
    "upload_url": "https://uploads.github.com/repos/paritytech/ink/releases/63755287/assets{?name,label}",
    "html_url": "https://github.com/paritytech/ink/releases/tag/v3.0.1",
    "id": 63755287,
    "author": {
      "login": "HCastano",
      "id": 12344623,
      "node_id": "MDQ6VXNlcjEyMzQ0NjIz",
      "avatar_url": "https://avatars.githubusercontent.com/u/12344623?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/HCastano",
      "html_url": "https://github.com/HCastano",
      "followers_url": "https://api.github.com/users/HCastano/followers",
      "following_url": "https://api.github.com/users/HCastano/following{/other_user}",
      "gists_url": "https://api.github.com/users/HCastano/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/HCastano/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/HCastano/subscriptions",
      "organizations_url": "https://api.github.com/users/HCastano/orgs",
      "repos_url": "https://api.github.com/users/HCastano/repos",
      "events_url": "https://api.github.com/users/HCastano/events{/privacy}",
      "received_events_url": "https://api.github.com/users/HCastano/received_events",
      "type": "User",
      "site_admin": false
    },
    "node_id": "RE_kwDOCZwVgs4DzNQX",
    "tag_name": "v3.0.1",
    "target_commitish": "master",
    "name": "v3.0.1",
    "draft": false,
    "prerelease": false,
    "created_at": "2022-04-06T14:07:40Z",
    "published_at": "2022-04-06T14:13:30Z",
    "assets": [

    ],
    "tarball_url": "https://api.github.com/repos/paritytech/ink/tarball/v3.0.1",
    "zipball_url": "https://api.github.com/repos/paritytech/ink/zipball/v3.0.1",
    "body": "# Version 3.0.1\r\n\r\n## Changed\r\n- Improve upgradeable examples folder structure, explain differences ‒ [#1188](https://github.com/paritytech/ink/pull/1188)\r\n\r\n## Fixed\r\n- Update codegen after SCALE v3.1.2 release ‒ [#1189](https://github.com/paritytech/ink/pull/1189)\r\n- Stop using `CallData` in `multisig` example doc test ‒ [#1202](https://github.com/paritytech/ink/pull/1202)"
  },
  {
    "url": "https://api.github.com/repos/paritytech/ink/releases/62105687",
    "assets_url": "https://api.github.com/repos/paritytech/ink/releases/62105687/assets",
    "upload_url": "https://uploads.github.com/repos/paritytech/ink/releases/62105687/assets{?name,label}",
    "html_url": "https://github.com/paritytech/ink/releases/tag/v3.0.0",
    "id": 62105687,
    "author": {
      "login": "cmichi",
      "id": 241530,
      "node_id": "MDQ6VXNlcjI0MTUzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/241530?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cmichi",
      "html_url": "https://github.com/cmichi",
      "followers_url": "https://api.github.com/users/cmichi/followers",
      "following_url": "https://api.github.com/users/cmichi/following{/other_user}",
      "gists_url": "https://api.github.com/users/cmichi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cmichi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cmichi/subscriptions",
      "organizations_url": "https://api.github.com/users/cmichi/orgs",
      "repos_url": "https://api.github.com/users/cmichi/repos",
      "events_url": "https://api.github.com/users/cmichi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cmichi/received_events",
      "type": "User",
      "site_admin": false
    },
    "node_id": "RE_kwDOCZwVgs4Ds6hX",
    "tag_name": "v3.0.0",
    "target_commitish": "master",
    "name": "v3.0.0",
    "draft": false,
    "prerelease": false,
    "created_at": "2022-03-17T13:56:01Z",
    "published_at": "2022-03-17T16:48:09Z",
    "assets": [

    ],
    "tarball_url": "https://api.github.com/repos/paritytech/ink/tarball/v3.0.0",
    "zipball_url": "https://api.github.com/repos/paritytech/ink/zipball/v3.0.0",
    "body": "# Version 3.0.0\r\n\r\nThis is the stable release for ink! 3.0.\r\n\r\nIt took us a while to get here and going forward we want to do smaller releases more often.\r\n\r\n*Please note that ink! has not been audited.*\r\n\r\n## Compatibility\r\nWe recommend using a version of the `contracts` pallet later than [cc282f84ba53ed2a08374d2a655dc8f08cbc5e86](https://github.com/paritytech/substrate/tree/cc282f84ba53ed2a08374d2a655dc8f08cbc5e86) (March 15, 2022) in your node.\r\n\r\nThis is the case in the latest release of the `substrate-contracts-node`: [v0.10.0](https://github.com/paritytech/substrate-contracts-node/releases/tag/v0.10.0).\r\n\r\n## Breaking Changes\r\n### We replaced the default off-chain testing environment\r\nThe off-chain testing environment can be used to write unit tests for your smart contract with a simulated chain. We've now replaced the existing off-chain environment with a new one, which has a bit of a different API.\r\n\r\nThe major changes are that there is no longer any notion of \"execution context\" ‒ so no more `push_execution_context` or `pop_execution_context`. You can achieve all the same things with the new API, see [here](https://paritytech.github.io/ink/ink_env/test/index.html) for the API documentation.\r\n\r\nWe've also switched all our examples to this new environment, you can find more \"template use-cases\" there (e.g. for [chain extension testing](https://github.com/paritytech/ink/tree/master/examples/rand-extension))\r\n\r\n### We removed the dynamic storage allocator\r\nMore details on the reasoning behind this can be found in [#1148](https://github.com/paritytech/ink/pull/1148).\r\n\r\n### `CallBuilder` API changed to support `delegate` calls\r\nThe `CallBuilder` API changed to now support two types of calls:\r\n\r\n* `Call`: a cross-contract call.<br/>\r\n   This was the default until this new API change.\r\n* `DelegateCall`: a delegated call.<br/>\r\n  This enables writing upgradeable contracts using the `delegate` pattern. An example has been added to demonstrate this: [`delegate-calls`](https://github.com/paritytech/ink/tree/master/examples/upgradeable-contracts/delegate-calls).\r\n\r\nThis is a breaking change, users must now specify the `call_type` to the builder manually.\r\n\r\n_If you want to keep existing behavior you just need to specify the type `Call` now._\r\n\r\nMore details on this change can be found in [#1133](https://github.com/paritytech/ink/pull/1133).\r\n\r\n### Unify `ink_env::{eval_contract, invoke_contract}`\r\n\r\nThe API for `eval_contract` and `invoke_contract` changed. You can read more about the change in [#1165](https://github.com/paritytech/ink/pull/1165).\r\n\r\n## Added\r\n- Added `keep_attr` to `#[ink::contract]` and `#[ink::trait_definition]` ‒ [#1145](https://github.com/paritytech/ink/pull/1145) (thanks [@xgreenx](https://github.com/xgreenx))..\r\n- Implemented the `seal_is_contract` and `seal_caller_is_origin` API ‒ [#1129](https://github.com/paritytech/ink/pull/1129) [#1166](https://github.com/paritytech/ink/pull/1166).\r\n- Add tests in experimental off-chain env for `trait-erc20` ‒ [#1158](https://github.com/paritytech/ink/pull/1158).\r\n- Add tests in experimental off-chain env for `erc721` ‒ [#1157](https://github.com/paritytech/ink/pull/1157).\r\n- Add tests in experimental off-chain env for `multisig` ‒ [#1159](https://github.com/paritytech/ink/pull/1159).\r\n- Add tests in experimental off-chain env for `dns` ‒ [#1156](https://github.com/paritytech/ink/pull/1156).\r\n- Implemented chain extension testing in experimental off-chain env ‒ [#1152](https://github.com/paritytech/ink/pull/1152).\r\n\r\n## Changed\r\n- Replaced default off-chain testing engine with experimental one ‒ [#1144](https://github.com/paritytech/ink/pull/1144).\r\n- Changed `CallBuilder` API to now support delegate calls ‒ [#1133](https://github.com/paritytech/ink/pull/1133) (thanks [@VargSupercolony](https://github.com/VargSupercolony) and [@xgreenx](https://github.com/xgreenx)).\r\n- Unify `ink_env::{eval_contract, invoke_contract}` ‒ [#1165](https://github.com/paritytech/ink/pull/1165).\r\n\r\n## Removed\r\n- Removed the dynamic storage allocator ‒ [#1148](https://github.com/paritytech/ink/pull/1148).\r\n- Removed `compile_as_dependency` config option ‒ [#1168](https://github.com/paritytech/ink/pull/1168).",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/ink/releases/62105687/reactions",
      "total_count": 9,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 2,
      "confused": 0,
      "heart": 3,
      "rocket": 2,
      "eyes": 0
    }
  },
  {
    "url": "https://api.github.com/repos/paritytech/ink/releases/60201218",
    "assets_url": "https://api.github.com/repos/paritytech/ink/releases/60201218/assets",
    "upload_url": "https://uploads.github.com/repos/paritytech/ink/releases/60201218/assets{?name,label}",
    "html_url": "https://github.com/paritytech/ink/releases/tag/v3.0.0-rc9",
    "id": 60201218,
    "author": {
      "login": "cmichi",
      "id": 241530,
      "node_id": "MDQ6VXNlcjI0MTUzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/241530?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cmichi",
      "html_url": "https://github.com/cmichi",
      "followers_url": "https://api.github.com/users/cmichi/followers",
      "following_url": "https://api.github.com/users/cmichi/following{/other_user}",
      "gists_url": "https://api.github.com/users/cmichi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cmichi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cmichi/subscriptions",
      "organizations_url": "https://api.github.com/users/cmichi/orgs",
      "repos_url": "https://api.github.com/users/cmichi/repos",
      "events_url": "https://api.github.com/users/cmichi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cmichi/received_events",
      "type": "User",
      "site_admin": false
    },
    "node_id": "RE_kwDOCZwVgs4DlpkC",
    "tag_name": "v3.0.0-rc9",
    "target_commitish": "master",
    "name": "ink! 3.0.0 RC 9",
    "draft": false,
    "prerelease": true,
    "created_at": "2022-02-23T07:39:01Z",
    "published_at": "2022-02-23T07:48:06Z",
    "assets": [

    ],
    "tarball_url": "https://api.github.com/repos/paritytech/ink/tarball/v3.0.0-rc9",
    "zipball_url": "https://api.github.com/repos/paritytech/ink/zipball/v3.0.0-rc9",
    "body": "# Version 3.0-rc9\r\n\r\nThis is the 9th release candidate for ink! 3.0.\r\n\r\n## Breaking Changes\r\n### We removed all data structures other than `Mapping` from the public ink! API\r\n\r\nThis is a drastic breaking change; it was no easy decision for us.\r\nIt affects `Lazy` and `Memory` as well. The rationale behind this change,\r\nas well as some notes on migrating existing contracts, are explained\r\nin [#1111](https://github.com/paritytech/ink/pull/1111) and\r\n[#1137](https://github.com/paritytech/ink/pull/1137).\r\n\r\nIf you used `Memory` in your contract, you can achieve the same functionality\r\nby passing this data via arguments. If you think there's a case to be\r\nmade for bringing it back, please get in contact with us.\r\n\r\nIf you use [`ink_storage::Mapping`](https://paritytech.github.io/ink/ink_storage/struct.Mapping.html)\r\nin your contract, you need to initialize the data structure using the helper function\r\n[`ink_lang::utils::initialize_contract(…)`](https://paritytech.github.io/ink/ink_lang/utils/fn.initialize_contract.html).\r\nFor more code examples you can take a look at our examples, e.g.\r\n[`erc20`](https://github.com/paritytech/ink/blob/master/examples/erc20/lib.rs).\r\n\r\n### Please upgrade `scale-info` and `parity-scale-codec` in your contract's dependencies\r\n\r\nIn this release candidate we upgraded `scale-info` and `parity-scale-codec`. You have to use a compatible\r\nversion in your contract's `Cargo.toml` as well; `cargo-contract` will throw an error otherwise.\r\n\r\nThe `Cargo.toml` should contain\r\n```\r\nscale-info = { version = \"2\", default-features = false, features = [\"derive\"], optional = true }\r\nscale = { package = \"parity-scale-codec\", version = \"3\", default-features = false, features = [\"derive\", \"full\"] }\r\n```\r\n\r\n## Added\r\n- Export `ink_lang::utils::initialize_contract(…)` - [#1077](https://github.com/paritytech/ink/pull/1077).\r\n- Add `get_owner()` function to `dns` example contract - [#1118](https://github.com/paritytech/ink/pull/1118) (thanks [@agryaznov](https://github.com/agryaznov)).\r\n- Improved usage documentation of `ink_storage::Mapping` - [#1138](https://github.com/paritytech/ink/pull/1138).\r\n\r\n## Changed\r\n- Updated to `parity-scale-codec = \"3\"` and `scale-info = \"2\"` - [#1132](https://github.com/paritytech/ink/pull/1132).\r\n\r\n## Removed\r\n- Remove `collection` and `lazy` modules from public ink! API - [#1111](https://github.com/paritytech/ink/pull/1111).\r\n- Remove `Memory` from public ink! API - [#1137](https://github.com/paritytech/ink/pull/1137).\r\n\r\n## Fixed\r\n- Fix bug with referencing two external trait definitions - [#1141](https://github.com/paritytech/ink/pull/1141).\r\n- Explicitly specify trait in dispatching - [#1131](https://github.com/paritytech/ink/pull/1131) (thanks [@xgreenx](https://github.com/xgreenx)).\r\n- Make `rust-analyzer` expand ink! macros without warning - [#1107](https://github.com/paritytech/ink/pull/1107).\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/ink/releases/60201218/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    }
  },
  {
    "url": "https://api.github.com/repos/paritytech/ink/releases/57549549",
    "assets_url": "https://api.github.com/repos/paritytech/ink/releases/57549549/assets",
    "upload_url": "https://uploads.github.com/repos/paritytech/ink/releases/57549549/assets{?name,label}",
    "html_url": "https://github.com/paritytech/ink/releases/tag/v3.0.0-rc8",
    "id": 57549549,
    "author": {
      "login": "cmichi",
      "id": 241530,
      "node_id": "MDQ6VXNlcjI0MTUzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/241530?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cmichi",
      "html_url": "https://github.com/cmichi",
      "followers_url": "https://api.github.com/users/cmichi/followers",
      "following_url": "https://api.github.com/users/cmichi/following{/other_user}",
      "gists_url": "https://api.github.com/users/cmichi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cmichi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cmichi/subscriptions",
      "organizations_url": "https://api.github.com/users/cmichi/orgs",
      "repos_url": "https://api.github.com/users/cmichi/repos",
      "events_url": "https://api.github.com/users/cmichi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cmichi/received_events",
      "type": "User",
      "site_admin": false
    },
    "node_id": "RE_kwDOCZwVgs4DbiLt",
    "tag_name": "v3.0.0-rc8",
    "target_commitish": "master",
    "name": "ink! 3.0.0 RC 8",
    "draft": false,
    "prerelease": true,
    "created_at": "2022-01-20T06:39:32Z",
    "published_at": "2022-01-20T08:22:08Z",
    "assets": [

    ],
    "tarball_url": "https://api.github.com/repos/paritytech/ink/tarball/v3.0.0-rc8",
    "zipball_url": "https://api.github.com/repos/paritytech/ink/zipball/v3.0.0-rc8",
    "body": "# Version 3.0-rc8\r\n\r\nThis is the 8th release candidate for ink! 3.0.\r\n\r\n## Compatibility\r\n\r\nYou need to upgrade to a new version of the `contracts` pallet in order to use this\r\nink! release. Specifically we recommend you upgrade to at least the pallet version\r\n[249dbbb](https://github.com/paritytech/substrate/commit/249dbbba6a1a277a3098c2a5b302645da16451ad)\r\n(or newer than Jan 17, 2022).\r\n\r\nFor `substrate-contracts-node` we just issued a new release `v0.5.0`, which has been synchronized\r\nto the latest Substrate `master` and hence is compatible with this ink! release candidate.\r\n\r\nAlso, the metadata changed with this release, so you need to have a recent version of\r\nthe user interface you are using. For `polkadot-js/api` and `polkadot-js/apps` the metadata\r\nchanges are supported since Jan 19, 2022.\r\n\r\n## Metadata Changes\r\nThere are two metadata changes in this release candidate:\r\n\r\n### For messages and constructors: `name: Array` ➔ `label: String`\r\n\r\nThe messages and constructors exposed by a contract were previously denoted with\r\n```json\r\n\"name\": [\"foo\", \"bar\"]\r\n```\r\nNow they are instead denoted with\r\n```json\r\n\"label\": \"foo\"\r\n```\r\nFor public contract methods that are implemented from a trait, the trait name is prefixed to\r\nthe method name with `::` as the separator. So e.g. `trait_name::get_owner`.\r\n\r\nThe ink! PR which implemented this is [#923](https://github.com/paritytech/ink/pull/923),\r\nfor the `polkadot-js/api` it was [polkadot-js/api#4255](https://github.com/polkadot-js/api/pull/4255).\r\n\r\n### Constructors got a new field: `payable: bool`\r\nConstructors now have to be specified `payable` if it's intended for them to receive value\r\n(i.e. tokens). This is a breaking change, beforehand they were by default payable,\r\nnow they are by default non-payable.\r\n\r\nThe ink! PR which implemented this is [#1065](https://github.com/paritytech/ink/pull/1065), the PR that updated the ink!\r\nmetadata to V3 is [#1100](https://github.com/paritytech/ink/pull/1100), and for the `polkadot-js/api` it was [polkadot-js/api#4432](https://github.com/polkadot-js/api/pull/4432).\r\n\r\n## Changed\r\n- Update metadate to support payable constructors - [#1100](https://github.com/paritytech/ink/pull/1100).\r\n- Make constructors non-payable by default, require specifying `payable` explicitly - [#1065](https://github.com/paritytech/ink/pull/1065).\r\n- Renamed the error code `EcdsaRecoverFailed` to `EcdsaRecoveryFailed` ‒ [#1064](https://github.com/paritytech/ink/pull/1064).\r\n- Renamed the `ink_env` function `transferred_balance()` to `transferred_value()` ‒ [#1063](https://github.com/paritytech/ink/pull/1063).\r\n- Removed the error codes `BelowSubsistenceThreshold` and `NewContractNotFunded` ‒ [#1062](https://github.com/paritytech/ink/pull/1062).\r\n- Updated ink! to use the most recent `contracts` pallet API ‒ [#1053](https://github.com/paritytech/ink/pull/1053).\r\n- Explicitly link against `rlibc` to get non-buggy version of `memcpy` ‒ [#1049](https://github.com/paritytech/ink/pull/1049).\r\n- Changed the metadata field `name` to `label` for messages and constructors ‒ [#923](https://github.com/paritytech/ink/pull/923) (thanks [@xgreenx](https://github.com/xgreenx)).\r\n\r\n## Added\r\n- Added a `remove` method to the `Mapping` data structure ‒ [#1023](https://github.com/paritytech/ink/pull/1023)."
  },
  {
    "url": "https://api.github.com/repos/paritytech/ink/releases/54071567",
    "assets_url": "https://api.github.com/repos/paritytech/ink/releases/54071567/assets",
    "upload_url": "https://uploads.github.com/repos/paritytech/ink/releases/54071567/assets{?name,label}",
    "html_url": "https://github.com/paritytech/ink/releases/tag/v3.0.0-rc7",
    "id": 54071567,
    "author": {
      "login": "cmichi",
      "id": 241530,
      "node_id": "MDQ6VXNlcjI0MTUzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/241530?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cmichi",
      "html_url": "https://github.com/cmichi",
      "followers_url": "https://api.github.com/users/cmichi/followers",
      "following_url": "https://api.github.com/users/cmichi/following{/other_user}",
      "gists_url": "https://api.github.com/users/cmichi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cmichi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cmichi/subscriptions",
      "organizations_url": "https://api.github.com/users/cmichi/orgs",
      "repos_url": "https://api.github.com/users/cmichi/repos",
      "events_url": "https://api.github.com/users/cmichi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cmichi/received_events",
      "type": "User",
      "site_admin": false
    },
    "node_id": "RE_kwDOCZwVgs4DOREP",
    "tag_name": "v3.0.0-rc7",
    "target_commitish": "master",
    "name": "ink! 3.0.0 RC 7",
    "draft": false,
    "prerelease": true,
    "created_at": "2021-11-25T10:59:04Z",
    "published_at": "2021-11-25T12:47:00Z",
    "assets": [

    ],
    "tarball_url": "https://api.github.com/repos/paritytech/ink/tarball/v3.0.0-rc7",
    "zipball_url": "https://api.github.com/repos/paritytech/ink/zipball/v3.0.0-rc7",
    "body": "# Version 3.0-rc7\r\n\r\nThis is the 7th release candidate for ink! 3.0.\r\n\r\nSince our last release candidate we implemented a number of contract size improvements.\r\nWith those improvements the size of our `erc20` example has reduced significantly:\r\n\r\n|          |             | Release Build with `cargo-contract` |\r\n|:---------|:------------|:------------------------------------|\r\n| `erc20`  | `3.0.0-rc6` | 29.3 K                              |\r\n| `erc20`  | `3.0.0-rc7` | 10.4 K                              |\r\n\r\nThe savings apply partly to our other examples; for `erc20` they are most\r\nsignificant since it has been migrated to use a new [`Mapping`](https://paritytech.github.io/ink/ink_storage/lazy/struct.Mapping.html)\r\ndata structure, which we introduce with this release candidate.\r\nThe other examples will be migrated to this new data structure as a next step.\r\n\r\n## Removed\r\n- Removed the state rent API ‒ [#1036](https://github.com/paritytech/ink/pull/1036).\r\n\r\n## Added\r\n- Added support for wildcard selectors ‒ [#1020](https://github.com/paritytech/ink/pull/1020).\r\n    - This enables writing upgradable smart contracts using the proxy/forward pattern.\r\n      We added a new example to illustrate this ‒ the [proxy](https://github.com/paritytech/ink/tree/master/examples/proxy) example.\r\n    - Annotating a wildcard selector in traits is not supported.\r\n- The ink! codegen now heavily relies on static type information based on traits defined in `ink_lang` ‒ [#665](https://github.com/paritytech/ink/pull/665).\r\n    - Some of those traits and their carried information can be used for static reflection of ink!\r\n      smart contracts. Those types and traits reside in the new `ink_lang::reflect` module and is\r\n      publicly usable by ink! smart contract authors.\r\n\r\n## Changed\r\n- Upgraded to the `seal_call` v1 API ‒ [#960](https://github.com/paritytech/ink/pull/960).\r\n  - This API now enables control over the behavior of cross-contract calls, e.g. to forward/clone input,\r\n    enable tail calls and control reentrancy.\r\n    The crate documentation contains more details on the [`CallFlags`](https://paritytech.github.io/ink/ink_env/struct.CallFlags.html).\r\n  - **Note:** The default behavior of cross-contract calls now disallows reentering the calling contract.\r\n- ink! contract definitions via `#[ink::contract]` ‒ [#665](https://github.com/paritytech/ink/pull/665).<br/>\r\n  For ink! smart contracts we now generate two contract types. Given `MyContract`:\r\n    - `MyContract` will still be the storage struct.\r\n      However, it can now additionally be used as static dependency in other smart contracts.\r\n      Static dependencies can be envisioned as being directly embedded into a smart contract.\r\n    - `MyContractRef` is pretty much the same of what we had gotten with the old `ink-as-dependency`.\r\n      It is a typed thin-wrapper around an `AccountId` that is mirroring the ink! smart contract's API\r\n      and implemented traits.\r\n- ink! trait definitions via `#[ink::trait_definition]` ‒ [#665](https://github.com/paritytech/ink/pull/665).\r\n    - ink! trait definitions no longer can define trait constructors.\r\n    - ink! trait implementations now inherit `selector` and `payable` properties for trait messages.\r\n        - Now explicitly setting `selector` or `payable` property for an implemented ink! trait method\r\n          will only act as a guard that the set property is in fact the same as defined by the ink!\r\n          trait definition.\r\n- Improved some ink! specific compile errors ‒ [#665](https://github.com/paritytech/ink/pull/665).\r\n    - For example, when using ink! messages and constructors which have inputs (or\r\n      outputs) that cannot be encoded (or decoded) using the SCALE codec.\r\n- Simplified selector computation for ink! trait methods ‒ [#665](https://github.com/paritytech/ink/pull/665).\r\n    - Now selectors are encoded as `blake2b({namespace}::{trait_identifier}::{message_identifier})[0..4]`.\r\n      If no `namespace` is set for the ink! trait definition then the formula is\r\n      `blake2b({trait_identifier}::{message_identifier})[0..4]`.\r\n      Where `trait_identifier` and `message_identifier` both refer to the identifiers of the ink! trait\r\n      definition and ink! trait message respectively.\r\n- We switched to Rust edition 2021 ‒ [#977](https://github.com/paritytech/ink/pull/977).\r\n- Update chain extension example to show argument passing ‒ [#1029](https://github.com/paritytech/ink/pull/1029).\r\n\r\n## Fixed\r\n- Contracts now revert the transaction if an ink! message returns `Result::Err` ‒ [#975](https://github.com/paritytech/ink/pull/975), [#998](https://github.com/paritytech/ink/pull/998).\r\n    - It is still possible to match against a `Result` return type for a called dependency contract\r\n      ‒ i.e. a sub-contract specified in the contract's `Cargo.toml`.\r\n- We implemented a number of Wasm contract size improvements:\r\n    - Simple Mapping Storage Primitive ‒ [#946](https://github.com/paritytech/ink/pull/946).\r\n    - Remove `always` from `inline` to allow compiler decide that to do ‒ [#1012](https://github.com/paritytech/ink/pull/1012) (thanks [@xgreenx](https://github.com/xgreenx)).\r\n    - Add a way to allocate a storage facility using spread (and packed) layouts ‒ [#978](https://github.com/paritytech/ink/pull/978).\r\n    - Extract non-generic part of `push_topic` to reduce code size ‒ [#1026](https://github.com/paritytech/ink/pull/1026).\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/ink/releases/54071567/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    }
  },
  {
    "url": "https://api.github.com/repos/paritytech/ink/releases/51589094",
    "assets_url": "https://api.github.com/repos/paritytech/ink/releases/51589094/assets",
    "upload_url": "https://uploads.github.com/repos/paritytech/ink/releases/51589094/assets{?name,label}",
    "html_url": "https://github.com/paritytech/ink/releases/tag/v3.0.0-rc6",
    "id": 51589094,
    "author": {
      "login": "cmichi",
      "id": 241530,
      "node_id": "MDQ6VXNlcjI0MTUzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/241530?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cmichi",
      "html_url": "https://github.com/cmichi",
      "followers_url": "https://api.github.com/users/cmichi/followers",
      "following_url": "https://api.github.com/users/cmichi/following{/other_user}",
      "gists_url": "https://api.github.com/users/cmichi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cmichi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cmichi/subscriptions",
      "organizations_url": "https://api.github.com/users/cmichi/orgs",
      "repos_url": "https://api.github.com/users/cmichi/repos",
      "events_url": "https://api.github.com/users/cmichi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cmichi/received_events",
      "type": "User",
      "site_admin": false
    },
    "node_id": "RE_kwDOCZwVgs4DEy_m",
    "tag_name": "v3.0.0-rc6",
    "target_commitish": "master",
    "name": "ink! 3.0.0 RC 6",
    "draft": false,
    "prerelease": true,
    "created_at": "2021-10-18T17:09:39Z",
    "published_at": "2021-10-19T05:37:04Z",
    "assets": [

    ],
    "tarball_url": "https://api.github.com/repos/paritytech/ink/tarball/v3.0.0-rc6",
    "zipball_url": "https://api.github.com/repos/paritytech/ink/zipball/v3.0.0-rc6",
    "body": "# Version 3.0-rc6\r\n\r\nThis is the 6th release candidate for ink! 3.0.\r\n\r\n## Added\r\n- Added an Ethereum-compatibility function to recover a public key from an ECDSA signature and message hash - [#914](https://github.com/paritytech/ink/pull/914) (thanks [@xgreenx](https://github.com/xgreenx)).\r\n\r\n## Changed\r\n- Update to `scale-info` 1.0 - [#845](https://github.com/paritytech/ink/pull/845).\r\n- Message and constructor selectors no longer take their inputs as string, but as `u32` decodable integer - [#928](https://github.com/paritytech/ink/pull/928).  \r\n  For example:\r\n    - It is no longer possible to specify a selector as `#[ink(selector = \"0xC0DECAFE\")]`.\r\n    - The newly allowed formats are `#[ink(selector = 0xC0DECAFE)]` and `#[ink(selector = 42)]`.\r\n    - Smart contract authors are required to update their smart contracts for this change.\r\n- Improved the `multisig` example - [#962](https://github.com/paritytech/ink/pull/962).\r\n- Changed the link to our beginner's workshop to the migrated workshop on `substrate.io` - [#957](https://github.com/paritytech/ink/pull/957).\r\n\r\n## Fixed\r\n- Fixed a mistake in the `ink_env::block_timestamp()` documentation - [#937](https://github.com/paritytech/ink/pull/937).\r\n"
  },
  {
    "url": "https://api.github.com/repos/paritytech/ink/releases/49332906",
    "assets_url": "https://api.github.com/repos/paritytech/ink/releases/49332906/assets",
    "upload_url": "https://uploads.github.com/repos/paritytech/ink/releases/49332906/assets{?name,label}",
    "html_url": "https://github.com/paritytech/ink/releases/tag/v3.0.0-rc5",
    "id": 49332906,
    "author": {
      "login": "cmichi",
      "id": 241530,
      "node_id": "MDQ6VXNlcjI0MTUzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/241530?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cmichi",
      "html_url": "https://github.com/cmichi",
      "followers_url": "https://api.github.com/users/cmichi/followers",
      "following_url": "https://api.github.com/users/cmichi/following{/other_user}",
      "gists_url": "https://api.github.com/users/cmichi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cmichi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cmichi/subscriptions",
      "organizations_url": "https://api.github.com/users/cmichi/orgs",
      "repos_url": "https://api.github.com/users/cmichi/repos",
      "events_url": "https://api.github.com/users/cmichi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cmichi/received_events",
      "type": "User",
      "site_admin": false
    },
    "node_id": "RE_kwDOCZwVgs4C8MKq",
    "tag_name": "v3.0.0-rc5",
    "target_commitish": "master",
    "name": "ink! 3.0.0 RC 5",
    "draft": false,
    "prerelease": true,
    "created_at": "2021-09-09T10:57:59Z",
    "published_at": "2021-09-10T08:47:02Z",
    "assets": [

    ],
    "tarball_url": "https://api.github.com/repos/paritytech/ink/tarball/v3.0.0-rc5",
    "zipball_url": "https://api.github.com/repos/paritytech/ink/zipball/v3.0.0-rc5",
    "body": "# Version 3.0-rc5 (2021-09-08)\r\n\r\nThis is the 5th release candidate for ink! 3.0.\r\n\r\nThe list below shows the additions, changes and fixes that are visible to users of ink!.\r\n\r\n## Compatibility\r\n\r\nIn the past we recommended using our [`canvas-node`](https://github.com/paritytech/canvas) for local contract development and testing. We've now migrated this node to be run as a Parachain. This new setup comes with some additional overhead though (such as requiring a local Polkadot installation); for local development this is often unnecessary.\r\n\r\nWe've therefore created a new project, the [`substrate-contracts-node`](https://github.com/paritytech/substrate-contracts-node). It fulfills the same purpose the `canvas-node` did before ‒ it's a standalone node which is just Substrate's [`node-template`](https://github.com/paritytech/substrate/tree/master/bin/node-template) modified to include [the `contracts` pallet](https://github.com/paritytech/substrate/tree/master/frame/contracts).\r\nYou can install the newest version like this:\r\n```\r\ncargo install contracts-node --git https://github.com/paritytech/substrate-contracts-node.git --force\r\n```\r\nAfter you've installed the node it can be run via `substrate-contracts-node --tmp --dev`.\r\n\r\n## Added\r\n- Added example for mocking chain extensions in off-chain tests ‒ [#882](https://github.com/paritytech/ink/pull/882).\r\n- Panic messages are now printed to debug buffer ‒ [#894](https://github.com/paritytech/ink/pull/894).\r\n\r\n## Changed\r\n- Unlicensed smart contract examples ‒ [#888](https://github.com/paritytech/ink/pull/888).\r\n- Stabilized `seal_debug_message` ‒ [#902](https://github.com/paritytech/ink/pull/902)."
  },
  {
    "url": "https://api.github.com/repos/paritytech/ink/releases/46661922",
    "assets_url": "https://api.github.com/repos/paritytech/ink/releases/46661922/assets",
    "upload_url": "https://uploads.github.com/repos/paritytech/ink/releases/46661922/assets{?name,label}",
    "html_url": "https://github.com/paritytech/ink/releases/tag/v3.0.0-rc4",
    "id": 46661922,
    "author": {
      "login": "cmichi",
      "id": 241530,
      "node_id": "MDQ6VXNlcjI0MTUzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/241530?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cmichi",
      "html_url": "https://github.com/cmichi",
      "followers_url": "https://api.github.com/users/cmichi/followers",
      "following_url": "https://api.github.com/users/cmichi/following{/other_user}",
      "gists_url": "https://api.github.com/users/cmichi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cmichi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cmichi/subscriptions",
      "organizations_url": "https://api.github.com/users/cmichi/orgs",
      "repos_url": "https://api.github.com/users/cmichi/repos",
      "events_url": "https://api.github.com/users/cmichi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cmichi/received_events",
      "type": "User",
      "site_admin": false
    },
    "node_id": "MDc6UmVsZWFzZTQ2NjYxOTIy",
    "tag_name": "v3.0.0-rc4",
    "target_commitish": "master",
    "name": "ink! 3.0.0 RC 4",
    "draft": false,
    "prerelease": true,
    "created_at": "2021-07-22T08:28:47Z",
    "published_at": "2021-07-23T09:51:58Z",
    "assets": [

    ],
    "tarball_url": "https://api.github.com/repos/paritytech/ink/tarball/v3.0.0-rc4",
    "zipball_url": "https://api.github.com/repos/paritytech/ink/zipball/v3.0.0-rc4",
    "body": "# Version 3.0-rc4 (2021-07-19)\r\n\r\nThis is the 4th release candidate for ink! 3.0.\r\n\r\nThe list below shows the additions, changes and fixes that are visible to users of ink!.\r\n\r\n## Compatibility\r\n\r\nink! 3.0-rc4 is compatible with\r\n\r\n- The \"ink! CLI\" [`cargo-contract`](https://github.com/paritytech/cargo-contract)\r\n  version `0.13.0` or newer.\r\n    - Install the newest version using `cargo install --force cargo-contract`.\r\n- Substrate version `4.0.0-dev` including the `contracts-pallet` version `4.0.0-dev`.\r\n- [`canvas-node`](https://github.com/paritytech/canvas-node) version `0.19.0` or newer.\r\n    - Install the newest version using `cargo install canvas-node --git https://github.com/paritytech/canvas-node.git --force`.\r\n\r\nThe documentation on our [Documentation Portal](https://paritytech.github.io/ink-docs)\r\nis up to date with this release candidate. Since the last release candidate we notabley\r\nadded a number of [Frequently Asked Questions](https://paritytech.github.io/ink-docs/faq)\r\nthere.\r\n\r\n## Quality Assurance\r\n\r\nIn order to ensure a continuously high quality of our codebase we implemented a number\r\nof key improvements to our testing setup:\r\n\r\n- We've put an emphasis on automated testing of the usage examples in our crate documentation.\r\n  Those are now tested in the context of a complete ink! contract. In the past this was not\r\n  always the case, sometimes usage examples were just isolated code snippets.\r\n- We started our [`ink-waterfall`](https://github.com/paritytech/ink-waterfall) project,\r\n  which runs End-to-End tests through our entire stack.\r\n  All our examples are continuously built using the latest `cargo-contract`. They are\r\n  subsequently deployed on the latest `canvas-node` by emulating browser interactions with\r\n  both the [`canvas-ui`](https://paritytech.github.io/canvas-ui/#/) and the\r\n  [`polkadot-js`](https://polkadot.js.org/apps/#/) UI.\r\n  This testing setup enables us to detect bugs which only appear in the context of using\r\n  multiple components together early on.\r\n- To improve the readability of our documentation we introduced automated grammar and spell\r\n  checking into our Continuous Integration environment.\r\n\r\n## Added\r\n- Added support for the new `seal_random` API ‒ [#734](https://github.com/paritytech/ink/pull/734).\r\n- Added missing documentation for the `ink_storage_derive` procedural macros ‒ [#711](https://github.com/paritytech/ink/pull/711).\r\n- Implemented the (unstable) `seal_rent_params` API ‒ [#755](https://github.com/paritytech/ink/pull/755).\r\n- Implemented the (unstable) `seal_rent_status` API ‒ [#798](https://github.com/paritytech/ink/pull/798).\r\n- Implemented the (unstable) `seal_debug_message` API ‒ [#792](https://github.com/paritytech/ink/pull/792).\r\n    - Printing debug messages can now be achieved via `ink_env::debug_println!(…)`.\r\n    - See [our documentation](https://paritytech.github.io/ink-docs/faq#how-do-i-print-something-to-the-console-from-the-runtime)\r\n      for more information.\r\n    - The examples have been updated to reflect this new way of printing debug messages.\r\n- Added usage comments with code examples to the `ink_env` API ‒ [#797](https://github.com/paritytech/ink/pull/797).\r\n    - The [published crate documentation](https://paritytech.github.io/ink/ink_lang/struct.EnvAccess.html) now contains\r\n      much more code examples for the methods behind `self.env()` and `Self::env()`.\r\n- Added an example implementation for ERC-1155, a multi-token standard ‒ [#800](https://github.com/paritytech/ink/pull/800).\r\n- Implemented binary search for `collections::Vec` ‒ [#836](https://github.com/paritytech/ink/pull/836).\r\n- Added the ability of submitting payable transactions to the `multisig` example ‒ [#820](https://github.com/paritytech/ink/pull/820).\r\n- Implemented `Decode` for `Error` types in the examples, enabling building them as dependencies ‒ [#761](https://github.com/paritytech/ink/pull/761).\r\n- We started working on a new off-chain environment testing engine ‒ [#712](https://github.com/paritytech/ink/pull/712).\r\n    - The old testing environment has a number of limitations, which we are well aware of.\r\n      We're confident that with the new testing engine we will be able to conduct much more\r\n      elaborate testing in an emulated chain environment.\r\n    - For the moment, the new engine is unstable and only available behind a feature flag.\r\n      A number of examples have already been converted to support the new testing engine.\r\n\r\n## Changed\r\n- To reduce a contract's space footprint we switched the default allocator to a bump allocator implementation ‒ [#831](https://github.com/paritytech/ink/pull/831).\r\n- A couple of readme's have been reworked:\r\n    - Our main ink! readme ‒ [#774](https://github.com/paritytech/ink/pull/774).\r\n    - The `rand-extension` example readme ‒ [#793](https://github.com/paritytech/ink/pull/793).\r\n    - The `delegator` example readme ‒ [#766](https://github.com/paritytech/ink/pull/766).\r\n- With the stabilization of Rust 1.51 we ware able to remove the `ink-unstable` feature, making\r\n  `collections::SmallVec` and `lazy::LazyArray` available by default ‒ [#746](https://github.com/paritytech/ink/pull/746).\r\n- To resolve confusion, we migrated all usages of `#[test]` in our examples to `#[ink::test]` ‒ [#746](https://github.com/paritytech/ink/pull/746).\r\n    - The difference is that `#[ink::test]` spawns an emulated chain environment (an \"off-chain\" environment)\r\n      and hence comes with a bit of overhead. It was not always clear to users when they require\r\n      an off-chain environment, we decided to mitigate this confusion by using an emulated chain\r\n      environment for all our example tests.\r\n- With the stabilization of Rust's `min_const_generics` we were able to replace the fixed\r\n  size implementations of `SpreadLayout` and `PackedLayout` for Arrays. These traits are\r\n  now implemented for all Arrays of size `usize` ‒ [#754](https://github.com/paritytech/ink/pull/754).\r\n- We were able to remove the pinned `funty` dependency ‒ [#711](https://github.com/paritytech/ink/pull/711).\r\n- The `contract-transfer` example has been improved for better UI support ‒ [#789](https://github.com/paritytech/ink/pull/789).\r\n- The `contract-transfer` example has been improved for better error handling ‒ [#790](https://github.com/paritytech/ink/pull/790).\r\n\r\n## Fixed\r\n- Catch illegal `struct` destructuring pattern in ink! message arguments ‒ [#846](https://github.com/paritytech/ink/pull/846).\r\n- Removed an erroneous `Salt` type in code generation for cross-contract calls ‒ [#842](https://github.com/paritytech/ink/pull/842).\r\n- Do not generate metadata if compiled as dependency ‒ [#811](https://github.com/paritytech/ink/pull/811).\r\n- Fix execution context parameters in DNS example tests ‒ [#723](https://github.com/paritytech/ink/pull/723).\r\n- Fixed the `Greeter` contract example from our doc comments ‒ [#773](https://github.com/paritytech/ink/pull/773).",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/ink/releases/46661922/reactions",
      "total_count": 3,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 3,
      "rocket": 0,
      "eyes": 0
    }
  },
  {
    "url": "https://api.github.com/repos/paritytech/ink/releases/39127479",
    "assets_url": "https://api.github.com/repos/paritytech/ink/releases/39127479/assets",
    "upload_url": "https://uploads.github.com/repos/paritytech/ink/releases/39127479/assets{?name,label}",
    "html_url": "https://github.com/paritytech/ink/releases/tag/v3.0.0-rc3",
    "id": 39127479,
    "author": {
      "login": "Robbepop",
      "id": 8193155,
      "node_id": "MDQ6VXNlcjgxOTMxNTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8193155?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Robbepop",
      "html_url": "https://github.com/Robbepop",
      "followers_url": "https://api.github.com/users/Robbepop/followers",
      "following_url": "https://api.github.com/users/Robbepop/following{/other_user}",
      "gists_url": "https://api.github.com/users/Robbepop/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Robbepop/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Robbepop/subscriptions",
      "organizations_url": "https://api.github.com/users/Robbepop/orgs",
      "repos_url": "https://api.github.com/users/Robbepop/repos",
      "events_url": "https://api.github.com/users/Robbepop/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Robbepop/received_events",
      "type": "User",
      "site_admin": false
    },
    "node_id": "MDc6UmVsZWFzZTM5MTI3NDc5",
    "tag_name": "v3.0.0-rc3",
    "target_commitish": "master",
    "name": "ink! 3.0.0 RC 3",
    "draft": false,
    "prerelease": true,
    "created_at": "2021-03-02T16:00:58Z",
    "published_at": "2021-03-02T16:05:27Z",
    "assets": [

    ],
    "tarball_url": "https://api.github.com/repos/paritytech/ink/tarball/v3.0.0-rc3",
    "zipball_url": "https://api.github.com/repos/paritytech/ink/zipball/v3.0.0-rc3",
    "body": "# Version 3.0-rc3 (2021-03-02)\r\n\r\nThis is the 3rd release candidate for ink! 3.0.\r\n\r\nThe list below shows the additions, changes and fixes that are visible to users of ink!.\r\n\r\n## Compatibility\r\n\r\nink! 3.0-rc3 is compatible with\r\n\r\n- The `cargo-contract` CLI tool version `0.9.1` or newer.\r\n    - Install newest version using `cargo install --force cargo-contract`.\r\n- Substrate version `3.0` including the `contracts-pallet` version `3.0`.\r\n\r\n## Added\r\n\r\n- Implemented chain extensions feature for ink!.\r\n- ink!'s official documentation portal: https://paritytech.github.io/ink-docs/\r\n- It is now possible to pass a `salt` argument to contract instantiations.\r\n- Implemented fuzz testing for the ink! codebase.\r\n\r\n## Changed\r\n\r\n- Migrate `ink_storage::SmallVec` and `ink_storage::lazy::SmallLazyArray` to use `min_const_generics`.\r\n    - The `min_const_generics` feature is going to be stabilized in Rust 1.51. For now it was put behind \r\n      the `ink-unstable` crate feature of the `ink_storage` crate.\r\n- Improve error reporting for conflicting ink! attributes.\r\n- Improve error reporting for invalid constructor or message selector. (https://github.com/paritytech/ink/pull/561)\r\n- Remove `iter_mut` for `ink_storage::BinaryHeap` data structure.\r\n- Add documented demonstration how to properly mock `transferred_balance` calls: https://github.com/paritytech/ink/pull/555\r\n- Add contract example which uses `ext_transfer` and `ext_terminate`: https://github.com/paritytech/ink/pull/554\r\n- Improve documentation of `transfer` and `minimum_balance` APIs: https://github.com/paritytech/ink/pull/540\r\n\r\n## Fixed\r\n\r\n- The Delegator example contract now compiles properly using the `build-all.sh` bash script.\r\n- Update crate dependencies:\r\n    - `scale-info 0.6`\r\n    - `parity-scale-codec 2.0`\r\n    - `rand 0.8`\r\n    - `itertools 0.10`\r\n- Remove unused `tiny-keccak` dependency from `ink_primitives`.\r\n- Changed the default `BlockNumber` type to `u32`. This is a fix since it now properly mirrors Substrate's default `BlockNumber` type.\r\n- Ensure topics are unique: https://github.com/paritytech/ink/pull/594\r\n- Several fixes for `ink_storage` data structures, including:\r\n    - `Drop` implementation for `Pack` now works properly. (https://github.com/paritytech/ink/pull/600)\r\n    - `Drop` implementation for `Lazy` now always properly clean up storage. (https://github.com/paritytech/ink/pull/597)\r\n    - Nested `Lazy` now properly clears storage data. (https://github.com/paritytech/ink/pull/583)\r\n    - `Option` fields now properly clean up nested storage data. (https://github.com/paritytech/ink/pull/570)\r\n"
  },
  {
    "url": "https://api.github.com/repos/paritytech/ink/releases/32915855",
    "assets_url": "https://api.github.com/repos/paritytech/ink/releases/32915855/assets",
    "upload_url": "https://uploads.github.com/repos/paritytech/ink/releases/32915855/assets{?name,label}",
    "html_url": "https://github.com/paritytech/ink/releases/tag/v3.0.0-rc2",
    "id": 32915855,
    "author": {
      "login": "Robbepop",
      "id": 8193155,
      "node_id": "MDQ6VXNlcjgxOTMxNTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8193155?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Robbepop",
      "html_url": "https://github.com/Robbepop",
      "followers_url": "https://api.github.com/users/Robbepop/followers",
      "following_url": "https://api.github.com/users/Robbepop/following{/other_user}",
      "gists_url": "https://api.github.com/users/Robbepop/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Robbepop/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Robbepop/subscriptions",
      "organizations_url": "https://api.github.com/users/Robbepop/orgs",
      "repos_url": "https://api.github.com/users/Robbepop/repos",
      "events_url": "https://api.github.com/users/Robbepop/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Robbepop/received_events",
      "type": "User",
      "site_admin": false
    },
    "node_id": "MDc6UmVsZWFzZTMyOTE1ODU1",
    "tag_name": "v3.0.0-rc2",
    "target_commitish": "master",
    "name": "ink! 3.0.0 RC 2",
    "draft": false,
    "prerelease": true,
    "created_at": "2020-10-22T12:38:29Z",
    "published_at": "2020-10-22T12:39:41Z",
    "assets": [

    ],
    "tarball_url": "https://api.github.com/repos/paritytech/ink/tarball/v3.0.0-rc2",
    "zipball_url": "https://api.github.com/repos/paritytech/ink/zipball/v3.0.0-rc2",
    "body": "# Version 3.0-rc2 (2020-10-22)\r\n\r\nThis is the 2nd release candidate for ink! 3.0.\r\n\r\nOn top of the changes introduced in the first release candidate for ink! 3.0 we introduced\r\nthe following improvements, new features and bug fixes:\r\n\r\n- The `ink_storage` crate now comes with a new `BinaryHeap` data structure\r\n  that has a very similar interface to the well known Rust standard library\r\n  `BinaryHeap`. It features specific optimizations to reduce the storage reads\r\n  and writes required for its operations.\r\n- Fixed a bug with `ink_storage::Lazy` that corrupted the storage of\r\n  other storage data structures if it was unused in a contract execution.\r\n- The `ink_storage::alloc::Box` type now implements `scale_info::TypeInfo` which\r\n  now allows it to be fully used inside other storage data structures such as\r\n  `ink_storage::collections::Vec`. The missing of this implementation was\r\n  considered a bug.\r\n- The `LazyHashMap` low-level storage abstraction is now re-exported from within\r\n  the `ink_storage::lazy` module and docs are inlined.\r\n- Added note about the `ink_core` split into `ink_env` and `ink_storage` crates\r\n  to the release notes of ink! 3.0-rc1.\r\n- The `Cargo.toml` documentation now properly links to the one deployed at docs.rs.\r\n  On top of that crate level documentation for the `ink_allocator` crate has been\r\n  added.\r\n- Add new ERC-20 example contract based on a trait implementation. Also modernized\r\n  the old non-trait based ERC-20 example token contract.\r\n"
  },
  {
    "url": "https://api.github.com/repos/paritytech/ink/releases/32387700",
    "assets_url": "https://api.github.com/repos/paritytech/ink/releases/32387700/assets",
    "upload_url": "https://uploads.github.com/repos/paritytech/ink/releases/32387700/assets{?name,label}",
    "html_url": "https://github.com/paritytech/ink/releases/tag/v3.0.0-rc1",
    "id": 32387700,
    "author": {
      "login": "Robbepop",
      "id": 8193155,
      "node_id": "MDQ6VXNlcjgxOTMxNTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8193155?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Robbepop",
      "html_url": "https://github.com/Robbepop",
      "followers_url": "https://api.github.com/users/Robbepop/followers",
      "following_url": "https://api.github.com/users/Robbepop/following{/other_user}",
      "gists_url": "https://api.github.com/users/Robbepop/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Robbepop/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Robbepop/subscriptions",
      "organizations_url": "https://api.github.com/users/Robbepop/orgs",
      "repos_url": "https://api.github.com/users/Robbepop/repos",
      "events_url": "https://api.github.com/users/Robbepop/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Robbepop/received_events",
      "type": "User",
      "site_admin": false
    },
    "node_id": "MDc6UmVsZWFzZTMyMzg3NzAw",
    "tag_name": "v3.0.0-rc1",
    "target_commitish": "master",
    "name": "ink! 3.0.0 RC 1",
    "draft": false,
    "prerelease": true,
    "created_at": "2020-10-09T19:28:10Z",
    "published_at": "2020-10-09T19:30:14Z",
    "assets": [

    ],
    "tarball_url": "https://api.github.com/repos/paritytech/ink/tarball/v3.0.0-rc1",
    "zipball_url": "https://api.github.com/repos/paritytech/ink/zipball/v3.0.0-rc1",
    "body": "# Version 3.0 (2020-10-09)\r\n\r\nBe prepared for the ink! 3.0 release notes because the whole version was basically a rewrite of\r\nall the major components that make up ink!. With our experience gained from previous releases\r\nof ink! we were able to detect weak spots of the design and provided ink! with more tools,\r\nmore features and more efficiency as ever. Read more below …\r\n\r\n## Just. Be. Rust. 3.0\r\n\r\nIn the 3.0 update we further explored the space for ink! to just feel like it was plain Rust.\r\nWith this in mind we changed the syntax slightly in order to better map from ink! to the generated\r\nRust code. So what users see is mostly what will be generated by ink! later.\r\n\r\nIn this vein `#[ink(storage)]` and `#[ink(event)]` structs as well as `#[ink(message)]` and\r\n`#[ink(constructor)]` methods now need to be specified with public visibility (`pub`).\r\n\r\nThe `#[ink(constructor)]` syntax also changes and no longer uses a `&mut self` receiver but\r\nnow follows the natural Rust constructors scheme. So it is no longer possible to shoot\r\nyourself in the foot by accidentally forgetting to initialize some important data structures.\r\n\r\n**Old ink! 2.0:**\r\n```rust\r\n#[ink(constructor)]\r\nfn new_erc20(&mut self, initial_supply: Balance) {\r\n    let caller = self.env().caller();\r\n    self.total_supply.set(initial_supply);\r\n    self.balances.insert(caller, initial_supply);\r\n}\r\n```\r\n**New ink! 3.0:**\r\n```rust\r\n#[ink(constructor)]\r\npub fn new_erc20(initial_supply: Balance) -> Self {\r\n    let caller = self.env().caller();\r\n    let mut balances = ink_storage::HashMap::new();\r\n    balances.insert(caller, initial_supply);\r\n    Self {\r\n        total_supply: initial_supply,\r\n        balances,\r\n    }\r\n}\r\n```\r\n\r\nAlso ink! 3.0 no longer requires a mandatory `version` field in the header of the ink! module attribute.\r\n\r\nSyntactically this is all it takes to port your current ink! smart contracts over to ink! 3.0 syntax.\r\n\r\n## New Storage Module\r\n\r\nThe storage module has been reworked entirely.\r\nAlso it no longer lives in the `ink_core` crate but instead is defined as its own `ink_storage` crate.\r\n\r\nIn a sense it acts as the standard storage library for ink! smart contracts in that it provides all the\r\nnecessary tools and data structures to organize and operate the contract's storage intuitively and efficiently.\r\n\r\n### Lazy\r\n\r\nThe most fundamental change in how you should think about data structures provided by the new `ink_storage`\r\ncrate is that they are inherently lazy. We will explain what this means below!\r\nThe `ink_storage` crate provides high-level and low-level lazy data structures.\r\nThe difference between high-level and low-level lies in the distinction in how these data structures are aware\r\nof the elements that they operate on. For high-level data structures they are fully aware about the elements\r\nthey contains, do all the clean-up by themselves so the user can concentrate on the business logic.\r\nFor low-level data structures the responsibility about the elements lies in the hands of the contract author.\r\nAlso they operate on cells (`Option<T>`) instead of entities of type `T`.\r\nBut what does that mean exactly?\r\n\r\nThe new `ink_storage::Lazy` type is what corresponds the most to the old `ink_core::storage::Value` type. Both cache their entities and both act lazily on the storage. This means that a read or write operation is only performed when it really needs to in order to satisfy other inputs.\r\nData types such as Rust primitives `i32` or Rust's very own `Vec` or data structures can also be used to operate on the contract's storage, however, they will load their contents eagerly which is often not what you want.\r\n\r\nAn example follows with the below contract storage and a message that operates on either of the two fields.\r\n```rust\r\n#[ink(storage)]\r\npub struct TwoValues {\r\n    offset: i32,\r\n    a: i32,\r\n    b: i32,\r\n}\r\n\r\nimpl TwoValues {\r\n    #[ink(message)]\r\n    pub fn set(&mut self, which: bool, new_value: i32) {\r\n        match which {\r\n            true  => { self.a = self.offset + new_value; },\r\n            false => { self.b = self.offset + new_value; },\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nWhenever we call `TwoValues::set` always both `a` and `b` are loaded despite the fact the we only operate on one of them at a time. This is very costly since storage accesses are in fact database look-ups.\r\nIn order to prevent this eager loading of storage contents we can make use of `ink_storage::Lazy` or other lazy data structures defined in that crate:\r\n```rust\r\n#[ink(storage)]\r\npub struct TwoValues {\r\n    offset: i32,\r\n    a: ink_storage::Lazy<i32>,\r\n    b: ink_storage::Lazy<i32>,\r\n}\r\n\r\nimpl TwoValues {\r\n    #[ink(message)]\r\n    pub fn set(&mut self, which: bool, new_value: i32) {\r\n        match which {\r\n            true  => { self.a = offset + new_value; },\r\n            false => { self.b = offset + new_value; },\r\n        }\r\n    }\r\n}\r\n```\r\nNow `a` and `b` are only loaded when the contract really needs their values.\r\nNote that `offset` remained `i32` since it is always needed and could spare the minor overhead of the `ink_storage::Lazy` wrapper.\r\n\r\n### HashMap\r\n\r\nIn the follow we explore the differences between the high-level `ink_storage::collections::HashMap`\r\nand the low-level `ink_storage::lazy::LazyHashMap`. Both provide very similar functionality in that they map some generic key to some storage entity.\r\n\r\nHowever, their APIs look very different. Whereas the `HashMap` provides a rich and high-level API that is comparable to that of Rust's very own `HashMap`, the `LazyHashMap` provides only a fraction of the API and also operates on `Option<T>` values types instead of `T` directly. It is more similar Solidity mappings than to Rust's `HashMap`.\r\n\r\nThe fundamental difference of both data structures is that `HashMap` is aware of the keys that have been stored in it and thus can reconstruct exactly which elements and storage regions apply to it. This enables it to provide iteration and automated deletion as well as efficient way to defragment its underlying storage to free some storage space again. This goes very well in the vein of Substrate's storage rent model where contracts have to pay for the storage they are using.\r\n\r\n| Data Structure | level of abstraction | caching | lazy | element type | container |\r\n|:--|:-:|:-:|:-:|:-:|:-:|\r\n| `T` | - | yes | no | `T` | primitive value |\r\n| `Lazy<T>` | high-level | yes | yes | `T` | single element container |\r\n| `LazyCell<T>` | low-level | yes | yes | `Option<T>` | single element, no container |\r\n| `Vec<T>` | high-level | yes | yes | `T` | Rust vector-like container |\r\n| `LazyIndexMap<T>` | low-level | yes | yes | `Option<T>` | similar to Solidity mapping |\r\n| `HashMap<K, V>` | high-level | yes | yes | `V` (key type `K`) | Rust map-like container |\r\n| `LazyHashMap<K, V>` | low-level | yes | yes | `Option<V>` (key type `K`) | similar to Solidity mapping |\r\n\r\nThere are many more! For more information about the specifics please take a look into [the `ink_storage` crate documentation](https://paritytech.github.io/ink/ink_storage/).\r\n\r\n### Spread & Packed Modes\r\n\r\nStoring or loading complex data structures to and from contract storage can be done in many different ways. You could store all information into a single storage cell or you could try to store all information into as many different cells as possible. Both strategies have pros and cons under different conditions.\r\n\r\nFor example it might be a very good idea to store all the information under the same cell if all the information is very compact. For example when we are dealing with a byte vector that is expected to never be larger than approx a thousand elements it would probably be more efficient if we store all those thousand bytes in the same cell and especially if we often access many of those (or all) in our contract messages.\r\n\r\nOn the other hand spreading information across as many cells as possible might be much more efficient if we are dealing with big data structures, a lot of information that is not compact, or when messages that operate on the data always only need a small fraction of the whole data.\r\nAn example for this use case is if you have a vector of user accounts where each account stores potentially a lot of information, e.g. a 32-byte hash etc and where our messages only every operate on only a few of those at a time. \r\n\r\nThe `ink_storage` crate provides the user full control over the strategy or a mix of these two root strategies through some fundamental abstractions that we are briefly presenting to you.\r\n\r\n### Default: Spreading Mode\r\n\r\nBy default ink! spreads information to as many cells as possible. For example if you have the following `#[ink(storage)]` struct every field will live in its own single storage cell. Note that for `c` all 32 bytes will share the same cell!\r\n\r\n```rust\r\n#[ink(storage)]\r\npub struct Spreaded {\r\n    a: i32,\r\n    b: ink_storage::Lazy<i32>,\r\n    c: [u8; 32],\r\n}\r\n```\r\n\r\n### Packing Storage\r\n\r\nWe can alter this behaviour by using the `ink_storage::Pack` abstraction:\r\n\r\n```rust\r\npub struct Spreaded {\r\n    a: i32,\r\n    b: ink_storage::Lazy<i32>,\r\n    c: [u8; 32],\r\n}\r\n\r\n#[ink(storage)]\r\npub struct Packed {\r\n    packed: ink_storage::Pack<Spreaded>,\r\n}\r\n```\r\n\r\nNow all fields of `Spreaded` will share the same storage cell. This means whenever one of them is stored to or loaded from the contract storage, all of them are stored or loaded. A user has to choose wisely what mode of operation is more suitable for their contract.\r\n\r\nThese abstractions can be combined in various ways, yielding full control to the users. For example, in the following only `a` and `b` share a common storage cell while `c` lives in its own:\r\n\r\n```rust\r\npub struct Spreaded {\r\n    a: i32,\r\n    b: ink_storage::Lazy<i32>,\r\n}\r\n\r\n#[ink(storage)]\r\npub struct Packed {\r\n    packed: ink_storage::Pack<Spreaded>,\r\n    c: [u8; 32],\r\n}\r\n```\r\n\r\n### Spreading Array Cells\r\n\r\nIf we prefer to store all bytes of `c` into their own storage cell we can make use of the `SmallVec` data structure. The `SmallVec` is a high-level data structure that allows to efficiently organize a fixed number of elements similar to a Rust array. However, unlike a Rust array it acts lazily upon the storage and spreads its elements into different cells.\r\n\r\n```rust\r\nuse typenum::U32;\r\n\r\npub struct Spreaded {\r\n    a: i32,\r\n    b: ink_storage::Lazy<i32>,\r\n}\r\n\r\n#[ink(storage)]\r\npub struct Packed {\r\n    packed: ink_storage::Pack<Spreaded>,\r\n    c: SmallVec<u8, U32>,\r\n}\r\n```\r\n\r\n### Opting-out of Storage\r\n\r\nIf you are in need of storing some temporary information across method and message boundaries ink! will have your back with the `ink_storage::Memory` abstraction. It allows you to simply opt-out of using the storage for the wrapped entitiy at all and thus is very similar to Solidity's very own `memory` annotation.\r\n\r\nAn example below:\r\n\r\n```rust\r\n#[ink(storage)]\r\npub struct OptedOut {\r\n    a: i32,\r\n    b: ink_storage::Lazy<i32>,\r\n    c: ink_storage::Memory<i32>,\r\n}\r\n```\r\n\r\nThe the above example `a` and `b` are normal storage entities, however, `c` on the other hand side will never load from or store to contract storage and will always be reset to the default value of its `i32` type for every contract call.\r\nIt can be accesses from all ink! messages or methods via `self.c` but will never manipulate the contract storage and thus acts wonderfully as some shared local information.\r\n\r\n### Dynamic Storage Allocator\r\n\r\nIn the previous section we have seen how the default mode of operation is to spread information and how we can opt-in to packing information into single cells via `ink_storage::Packed`.\r\n\r\nHowever, what if we wanted to store a vector of a vector of `i32` for example?\r\nNaturally a user would try to construct this as follows:\r\n\r\n```rust\r\nuse ink_storage::Vec as StorageVec;\r\n\r\n#[ink(storage)]\r\npub struct Matrix {\r\n    values: StorageVec<StorageVec<i32>>,\r\n}\r\n```\r\n\r\nHowever, this will fail compilation with an error indicating that `StorageVec<T>` requires for its `T` to be packed (`T: PackedLayout`) which `StorageVec<T>` itself does not since it always stores all of its elements into different cells. The same applies to many other storage data sturctures provided by `ink_storage` and is a trade-off the ink! team decided for the case of efficiency of the overall system.\r\nInstead what a user can do in order to get their vector-of-vector to be working is to make use of ink!'s dynamic storage allocator capabilities.\r\n\r\nFor this the contract author has to first enable the feature via:\r\n\r\n```rust\r\nuse ink_lang as ink;\r\n\r\n#[ink::contract(dynamic_storage_allocator = true)]\r\nmod matrix {\r\n    // contract code ...\r\n}\r\n```\r\n\r\nAnd then we can define our `Matrix` `#[ink(storage)]` as follows:\r\n\r\n```rust\r\nuse ink_storage::{\r\n    Vec as StorageVec,\r\n    Box as StorageBox,\r\n};\r\n\r\n#[ink(storage)]\r\npub struct Matrix {\r\n    values: StorageVec<StorageBox<StorageVec<i32>>>,\r\n}\r\n```\r\n\r\nWith `ink_storage::Box<T>` we can use a `T: SpreadLayout` as if it was `T: PackedLayout` since the `ink_storage::Box<T>` itself suffices the requirements and can be put into a single contract storage cell. The whole concept works quite similar to how Rust's `Box` works: by an indirection - contract authors are therefore advised to make use of dynamic storage allocator capabilities only if other ways of dealing with ones problems are not applicable.\r\n\r\n### Custom Data Sturctures\r\n\r\nWhile the `ink_storage` crate provides tons of useful utilities and data structures to organize and manipulate the contract's storage contract authors are not limited by its capabilities. By implementing the core `SpreadLayout` and `PackedLayout` traits users are able to define their very own custom storage data structures with their own set of requirement and features that work along the `ink_storage` data structures as long as they fulfill the mere requirements stated by those two traits.\r\n\r\nIn the future we plan on providing some more ink! workshops and tutorials guiding the approach to design and implement a custom storage data structure.\r\n\r\n### In Summary\r\n\r\nThe new `ink_storage` crate provides everything you need to operate on your contract's storage.\r\nThere are low-level and high-level data structures depending on your need of control.\r\nAll provided data structures operate lazily on the contract's storage and cache their reads and writes for a more gas efficient storage access.\r\nUsers should prefer high-level data structures found in the `collections` module over the low-level data structures found in the `lazy` module.\r\nFor a list of all the new storage data structure visit [`ink_storage`'s documentation](https://paritytech.github.io/ink/ink_storage/).\r\n\r\n## ink! Attributes\r\n\r\nFor ink! 3.0 we have added some more useful ink! specific attributes to the table.\r\nAll of these ink! attributes are available to specify inside an ink! module.\r\nAn ink! module is the module that is flagged by `#[ink::contract]` containing all the ink! definitions:\r\n```rust\r\nuse ink_lang as ink;\r\n\r\n#[ink::contract]\r\nmod erc20 {\r\n    #[ink(storage)]\r\n    pub struct Erc20 { ... }\r\n\r\n    impl Erc20 {\r\n        #[ink(constructor)]\r\n        pub fn new(initial_supply: Balance) -> Self { .. }\r\n\r\n        #[ink(constructor)]\r\n        pub fn total_supply(&self) -> Balance { .. }\r\n\r\n        // etc. ...\r\n    }\r\n}\r\n```\r\n\r\nWe won't be going into the details for any of those but will briefly present the entire set of ink! specific attributes below:\r\n\r\n| Attribute | Where Applicable | Description |\r\n|:--|:--|:--|\r\n| `#[ink(storage)]` | On `struct` definitions. | Defines the ink! storage struct. There can only be one ink! storage definition per contract. |\r\n| `#[ink(event)]` | On `struct` definitions. | Defines an ink! event. A contract can define multiple such ink! events. |\r\n| `#[ink(anonymous)]` **new** | Applicable to ink! events. | Tells the ink! codegen to treat the ink! event as anonmyous which omits the event signature as topic upon emitting. Very similar to anonymous events in Solidity. |\r\n| `#[ink(topic)]` | Applicate on ink! event field. | Tells the ink! codegen to provide a topic hash for the given field. Every ink! event can only have a limited number of such topic field. Similar semantics as to indexed event arguments in Solidity. |\r\n| `#[ink(message)]` | Applicable to methods. | Flags a method for the ink! storage struct as message making it available to the API for calling the contract. |\r\n| `#[ink(constructor)]` | Applicable to method. | Flags a method for the ink! storage struct as constructor making it available to the API for instantiating the contract. |\r\n| `#[ink(payable)]` **new** | Applicable to ink! messages. | Allows receiving value as part of the call of the ink! message. ink! constructors are implicitely payable. |\r\n| `#[ink(selector = \"..\")]` **new** | Applicable to ink! messages and ink! constructors. | Specifies a concrete dispatch selector for the flagged entity. This allows a contract author to precisely control the selectors of their APIs making it possible to rename their API without breakage. |\r\n| `#[ink(namespace = \"..\")]` **new** | Applicable to ink! trait implementation blocks. | Changes the resulting selectors of all the ink! messages and ink! constructors within the trait implementation. Allows to disambiguate between trait implementations with overlapping message or constructor names. Use only with great care and consideration! |\r\n| `#[ink(implementation)]` **new** | Applicable to ink! implementation blocks. | Tells the ink! codegen that some implementation block shall be granted access to ink! internals even without it containing any ink! messages or ink! constructors. |\r\n\r\n## Merging of ink! Attributes\r\n\r\nIt is possible to merge attributes that share a common flagged entitiy.\r\nThe example below demonstrates this for a payable message with a custom selector.\r\n\r\n```rust\r\n#[ink(message)]\r\n#[ink(payable)]\r\n#[ink(selector = \"0xCAFEBABE\")]\r\npub fn transfer(&mut self, from: AccountId, to: AccountId, value: Balance) -> Result<(), Error> {\r\n    // actual implementation\r\n}\r\n```\r\nWe can also write the above ink! message definition in the following way:\r\n```rust\r\n#[ink(message, payable, selector = \"0xCAFEBABE\")]\r\npub fn transfer(&mut self, from: AccountId, to: AccountId, value: Balance) -> Result<(), Error> {\r\n    // actual implementation\r\n}\r\n```\r\n\r\n## Trait Support\r\n\r\nOne of the most anticipated features of ink! 3.0 is its Rust trait support.\r\nThrough the new `#[ink::trait_definition]` proc. macro it is now possible to define your very own trait definitions that are then implementable by ink! smart contracts.\r\n\r\nThis allows to defined shared smart contract interfaces to different concrete implementations.\r\nNote that this ink! trait definition can be defined anywhere, even in another crate!\r\n\r\n### Example\r\n\r\nDefined in the `base_erc20.rs` module.\r\n\r\n```rust\r\nuse ink_lang as ink;\r\n\r\n#[ink::trait_definition]\r\npub trait BaseErc20 {\r\n    /// Creates a new ERC-20 contract and initializes it with the initial supply for the instantiator.\r\n    #[ink(constructor)]\r\n    pub fn new(initial_supply: Balance) -> Self;\r\n\r\n    /// Returns the total supply.\r\n    #[ink(message)]\r\n    pub fn total_supply(&self) -> Balance;\r\n\r\n    /// Transfers `amount` from caller to `to`.\r\n    #[ink(message, payable)]\r\n    pub fn transfer(&mut self, to: AccountId, amount: Balance);\r\n}\r\n```\r\n\r\nAn ink! smart contract definition can then implement this trait definition as follows:\r\n\r\n```rust\r\nuse ink_lang as ink;\r\n\r\n#[ink::contract]\r\nmod erc20 {\r\n    use base_erc20::BaseErc20;\r\n\r\n    #[ink(storage)]\r\n    pub struct Erc20 {\r\n        total_supply: Balance,\r\n        // more fields ...\r\n    }\r\n\r\n    impl BaseErc20 for Erc20 {\r\n        #[ink(constructor)]\r\n        pub fn new(initial_supply: Balance) -> Self {\r\n            // implementation ...\r\n        }\r\n\r\n        #[ink(message)]\r\n        pub fn total_supply(&self) -> Balance {\r\n            // implementation ...\r\n        }\r\n\r\n        #[ink(message, payable)]\r\n        pub fn transfer(&mut self, to: AccountId, amount: Balance) {\r\n            // implementation ...\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nCalling the above `Erc20` explicitely through its trait implementation can be done just as if it was normal Rust code:\r\n\r\n```rust\r\n// --- Instantiating the ERC-20 contract:\r\n//\r\nlet mut erc20 = <Erc20 as BaseErc20>::new(1000);\r\n// --- Is just the same as:\r\nuse base_erc20::BaseErc20;\r\nlet mut erc20 = Erc20::new(1000);\r\n\r\n// --- Retrieving the total supply:\r\n//\r\nassert_eq!(<Erc20 as BaseErc20>::total_supply(&erc20), 1000);\r\n// --- Is just the same as:\r\nuse base_erc20::BaseErc20;\r\nassert_eq!(erc20.total_supply(), 1000);\r\n```\r\n\r\nThere are still many limitations to ink! trait definitions and trait implementations.\r\nFor example it is not possible to define associated constants or types or have default implemented methods.\r\nThese limitations exist because of technical intricacies, however, please expect that many of those will be tackled in future ink! releases.\r\n"
  },
  {
    "url": "https://api.github.com/repos/paritytech/ink/releases/24848735",
    "assets_url": "https://api.github.com/repos/paritytech/ink/releases/24848735/assets",
    "upload_url": "https://uploads.github.com/repos/paritytech/ink/releases/24848735/assets{?name,label}",
    "html_url": "https://github.com/paritytech/ink/releases/tag/v2.1.0",
    "id": 24848735,
    "author": {
      "login": "Robbepop",
      "id": 8193155,
      "node_id": "MDQ6VXNlcjgxOTMxNTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8193155?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Robbepop",
      "html_url": "https://github.com/Robbepop",
      "followers_url": "https://api.github.com/users/Robbepop/followers",
      "following_url": "https://api.github.com/users/Robbepop/following{/other_user}",
      "gists_url": "https://api.github.com/users/Robbepop/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Robbepop/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Robbepop/subscriptions",
      "organizations_url": "https://api.github.com/users/Robbepop/orgs",
      "repos_url": "https://api.github.com/users/Robbepop/repos",
      "events_url": "https://api.github.com/users/Robbepop/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Robbepop/received_events",
      "type": "User",
      "site_admin": false
    },
    "node_id": "MDc6UmVsZWFzZTI0ODQ4NzM1",
    "tag_name": "v2.1.0",
    "target_commitish": "master",
    "name": "ink! v2.1.0",
    "draft": false,
    "prerelease": false,
    "created_at": "2020-03-25T12:51:34Z",
    "published_at": "2020-03-25T12:55:45Z",
    "assets": [

    ],
    "tarball_url": "https://api.github.com/repos/paritytech/ink/tarball/v2.1.0",
    "zipball_url": "https://api.github.com/repos/paritytech/ink/zipball/v2.1.0",
    "body": "Release Notes\r\n\r\n- Add built-in support for cryptographic hashes\r\n    - Blake2 with 128-bit and 256-bit\r\n    - Sha2 with 256-bit\r\n    - Keccak with 256-bit\r\n- Add `ink_core::hash` module for high-level API to the new built-in hashes\r\n- Update `runtime-storage` example contract to demonstrate the new built-in hashes"
  },
  {
    "url": "https://api.github.com/repos/paritytech/ink/releases/24629254",
    "assets_url": "https://api.github.com/repos/paritytech/ink/releases/24629254/assets",
    "upload_url": "https://uploads.github.com/repos/paritytech/ink/releases/24629254/assets{?name,label}",
    "html_url": "https://github.com/paritytech/ink/releases/tag/v2.0.0",
    "id": 24629254,
    "author": {
      "login": "Robbepop",
      "id": 8193155,
      "node_id": "MDQ6VXNlcjgxOTMxNTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8193155?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Robbepop",
      "html_url": "https://github.com/Robbepop",
      "followers_url": "https://api.github.com/users/Robbepop/followers",
      "following_url": "https://api.github.com/users/Robbepop/following{/other_user}",
      "gists_url": "https://api.github.com/users/Robbepop/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Robbepop/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Robbepop/subscriptions",
      "organizations_url": "https://api.github.com/users/Robbepop/orgs",
      "repos_url": "https://api.github.com/users/Robbepop/repos",
      "events_url": "https://api.github.com/users/Robbepop/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Robbepop/received_events",
      "type": "User",
      "site_admin": false
    },
    "node_id": "MDc6UmVsZWFzZTI0NjI5MjU0",
    "tag_name": "v2.0.0",
    "target_commitish": "master",
    "name": "ink! 2.0.0",
    "draft": false,
    "prerelease": false,
    "created_at": "2020-03-18T10:39:16Z",
    "published_at": "2020-03-18T11:13:49Z",
    "assets": [

    ],
    "tarball_url": "https://api.github.com/repos/paritytech/ink/tarball/v2.0.0",
    "zipball_url": "https://api.github.com/repos/paritytech/ink/zipball/v2.0.0",
    "body": "Initial release of ink! v2.0.0.\r\n\r\nFor more information about writing ink! smart contract visit the [ Parity DevHub](https://substrate.dev/substrate-contracts-workshop/#/)."
  }
]
